{"version":3,"sources":["assets/images/logo.png","assets/images/avatar.jpg","config/firebase.js","providers/UserProvider.js","components/Header.js","components/LandingPage.js","components/Registrieren.js","components/fragment/LoginForm.js","components/Login.js","assets/images/newspaper.jpg","components/configurator/Step1Delivery.js","components/fragment/AboEdition.js","components/configurator/Step2Detail.js","components/fragment/AddressForm.js","components/fragment/Abonnement.js","components/configurator/Step3Checkout.js","components/fragment/UserForm.js","components/user/Userprofile.js","components/user/Abonnements.js","components/GoodbyePage.js","components/utils/ProtectedRoute.js","components/utils/ProtectedRouteAboDetail.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","generateUserDocument","user","additionalData","a","userRef","doc","uid","get","exists","email","set","console","error","getUserDocument","userDocument","data","updateUserDocument","update","deleteUserDocument","delete","generateAboDocument","collection","add","then","aboRef","getAboDocument","catch","updateAboDocument","aboId","aboDocument","UserContext","createContext","UserProvider","props","componentDidMount","onAuthStateChanged","userAuth","setState","updateUser","bind","state","this","Provider","value","children","Component","Header","Navbar","collapseOnSelect","expand","bg","variant","sticky","to","Brand","alt","src","logo","width","className","style","marginRight","Toggle","aria-controls","Collapse","id","Nav","context","Dropdown","alignRight","navbar","avatar","Menu","Divider","Button","contextType","LandingPage","Container","Image","marginLeft","fluid","firstname","lastname","onClick","history","push","withRouter","Registrieren","onChangeDifferentBillingAddress","handleSubmit","toggleDuplicateEmailAddress","differentBillingAddress","validated","signIn","duplicateEmailAddress","prevState","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","log","checked","password","titleAddress","companyname","phone","deliveryAddress","city","plz","street","billingAddress","createUserWithEmailAndPassword","handleLogIn","code","Form","noValidate","onSubmit","Group","controlId","Control","disabled","name","placeholder","required","as","defaultValue","Row","Col","Feedback","type","minLength","Check","onChange","label","aria-describedby","Text","muted","Toast","show","onClose","Body","Spinner","animation","size","role","aria-hidden","textAlign","LoginForm","toggleUserMissing","togglePasswordWrong","logIn","userMissing","passwordWrong","signInWithEmailAndPassword","that","login","handleSuccessfullyLogIn","Login","Step1Delivery","handleClose","onChangeAddress","startConfig","formAddress","React","createRef","showModal","validatedAddress","fieldName","target","fieldVal","newDeliveryAddress","current","changeDeliveryAddress","paddingTop","Card","Img","newspaper","Title","fontSize","ListGroup","ListGroupItem","ref","Footer","float","Modal","onHide","backdrop","aria-labelledby","centered","closeButton","AboEdition","edition","cssCardClass","title","aboWeekend","currentPriceID","period","otherCountry","otherCountryDelivery","checkedYearly","toUpperCase","Math","round","price","getDistanceSupplement","borderBottom","Item","isAvailable","handleVariantSelect","Step2Detail","handleYearlyChange","handleAboChange","handleCheckout","isLoading","calcDistance","selectedAbo","cssEdition","sport","stadt","land","headers","fetch","method","header","response","json","distance","localVersions","Object","values","length","forEach","version","minDate","Date","setDate","getDate","startDate","setHours","newAbo","userId","created","toLocaleString","split","startabodate","endabodate","dataprivacyaccepted","abotype","deliverymethod","paymenttype","payment","subscriptiontype","calculatedprice","calculatedyearprice","localpaperversions","hintDeliveryMan","hint","onAboCreate","handleStartDateChange","handleChangeHint","Typography","component","Grid","container","alignItems","justifyContent","spacing","item","Switch","color","marginBottom","utils","DateFnsUtils","locale","deLocale","disableToolbar","format","margin","KeyboardButtonProps","invalidDateMessage","minDateMessage","InputGroup","FormControl","aria-label","AddressForm","addressType","Abonnement","getAboVersion","getAboPrice","getAboVariant","getDeliveryMethod","getPaymentType","handleCloseCancelAbo","handleCancelAbo","handleCloseToast","showModalCancelAbo","cancelAbo","showToast","abo","deliveryMethod","IBAN","BIC","AccountHolder","cencelAbo","allowCancel","position","delay","autohide","Step3Checkout","handleTabChange","handlePaymentChange","handleLastschriftInfoChange","openModal","handleCheckoutAbo","handleTabChangeDirectDebit","handleCloseDelAddress","handleUserUpdate","handleCloseDelAddressToastSuccess","handleCloseDelAddressToastError","openChangeDelAddress","getAbo","formDataSec","formIBAN","key","lastschrift","validatedDataSecurity","validatedIBAN","saving","showModalDelAddress","updateDelAddress","validatedDelAddress","showDelAddressToastSuccess","showDelAddressToastError","iban","bic","clearAbo","onCustomerUpdate","Tabs","activeKey","Tab","tabClassName","eventKey","Input","Label","UserForm","Userprofile","handleCloseBilAddress","handleCloseUser","handleCloseDeleteUser","handleDeleteUser","showModalBilAddress","validatedBilAddress","updateBilAddress","showModalUser","validateUser","showModalDeleteUser","deleteUser","newUser","info","validatedUser","onCustomerDelete","err","Abonnements","abos","userUid","Promise","resolved","rejected","where","querySnapshot","aboArray","map","index","GoodbyePage","ProtectedRoute","rest","Consumer","render","pathname","from","location","ProtectedRouteAboDetail","App","handleLogOut","getMinDate","tempDeliveryAddress","keys","constructor","signOut","updatedCustomer","resolve","reject","currentUser","date","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2a0e913d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e9589ad7.png\";","export default __webpack_public_path__ + \"static/media/avatar.9771c045.jpg\";","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBGHdy4jQM7kaVneI5TiEzupmJ-4htjbis\",\n    authDomain: \"abobestellung-kfru.firebaseapp.com\",\n    projectId: \"abobestellung-kfru\",\n    storageBucket: \"abobestellung-kfru.appspot.com\",\n    messagingSenderId: \"228261219425\",\n    appId: \"1:228261219425:web:e8ce90dffd59b34e672e20\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const generateUserDocument = async (user, additionalData) => {\n    if (!user) return;\n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n    if (!snapshot.exists) {\n        const {email} = user;\n        try {\n            await userRef.set({\n                email,\n                ...additionalData\n            });\n        } catch (error) {\n            console.error(\"Error creating user document\", error);\n        }\n    }\n    return getUserDocument(user.uid);\n}\n\nconst getUserDocument = async uid => {\n    if (!uid) return null;\n    try {\n        const userDocument = await firestore.doc(`users/${uid}`).get();\n        return {\n            uid,\n            ...userDocument.data()\n        };\n    } catch (error) {\n        console.error(\"Error fetching user\", error);\n    }\n}\n\nexport const updateUserDocument = async (user, additionalData) => {\n    if (!user) return;\n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n    if (snapshot.exists) {\n        try {\n            await userRef.update({\n                ...additionalData\n            });\n        } catch (error) {\n            console.error(\"Error updating user document\", error);\n        }\n    } else {\n        console.error(\"No User available to update\");\n        return;\n    }\n    return getUserDocument(user.uid);\n}\n\nexport const deleteUserDocument = async (user) => {\n    if (!user) return;\n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n    if (snapshot.exists) {\n        try {\n            await userRef.delete();\n        } catch (error) {\n            console.error(\"Error delete user document\", error);\n        }\n    } else {\n        console.error(\"No User available to delete\");\n        return;\n    }\n    return getUserDocument(user.uid);\n}\n\nexport const generateAboDocument = async (data) => {\n    const aboCol = firestore.collection(`abos`);\n\n    aboCol.add(data)\n        .then((aboRef) => {\n            return getAboDocument(aboRef)\n        })\n        .catch((error) => {\n            console.error(\"Error adding document: \", error)\n        })\n}\n\nexport const updateAboDocument = async (aboId, data) => {\n    if (!aboId) return;\n    const aboRef = firestore.doc(`abos/${aboId}`);\n    const snapshot = await aboRef.get();\n    if (snapshot.exists) {\n        try {\n            await aboRef.update({\n                ...data\n            });\n        } catch (error) {\n            console.error(\"Error updating abo document\", error);\n        }\n    } else {\n        console.error(\"No Abo available to update\");\n        return;\n    }\n    return getAboDocument(aboId);\n}\n\nconst getAboDocument = async aboRef => {\n    if (!aboRef) return null;\n    try {\n        const aboDocument = await firestore.doc(`abos/${aboRef}`).get();\n        return {\n            aboRef,\n            ...aboDocument.data()\n        };\n    } catch (error) {\n        console.error(\"Error fetching abo\", error);\n    }\n}\n\nexport const getAllAbosForUserDocument = (userUid) => {\n    return new Promise((resolved, rejected) => {\n        if (!userUid) rejected(\"UserID not provided\");\n        firestore.collection(`abos`).where(\"userId\", \"==\", userUid).get()\n            .then((querySnapshot) => {\n                let aboArray = []\n                querySnapshot.forEach((doc) => {\n                   aboArray.push({aboId: doc.id, ...doc.data()})\n                });\n                resolved(aboArray)\n            })\n            .catch((error) => {\n                rejected(error)\n            })\n    })\n}","import React, {Component, createContext} from \"react\";\nimport {auth, generateUserDocument} from \"../config/firebase\";\n\nexport const UserContext = createContext({user: null});\n\nclass UserProvider extends Component {\n\n    constructor(props) {\n        super(props)\n        this.updateUser = this.updateUser.bind(this)\n\n        this.state = {\n            user: null\n        }\n    }\n\n    componentDidMount = () => {\n        auth.onAuthStateChanged(async userAuth => {\n            const user = await generateUserDocument(userAuth);\n            this.setState({\n                user: user\n            })\n        })\n    }\n\n    async updateUser() {\n        const user = await generateUserDocument(this.state.user);\n        this.setState({\n            user: user\n        })\n    }\n\n    render() {\n        return (\n            <UserContext.Provider value={{user: this.state.user, updateUser: this.updateUser}}>\n                {this.props.children}\n            </UserContext.Provider>\n        )\n    }\n}\n\nexport default UserProvider;","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Button from 'react-bootstrap/Button'\n\nimport logo from '../assets/images/logo.png'\nimport avatar from '../assets/images/avatar.jpg'\nimport {UserContext} from \"../providers/UserProvider\";\n\nexport class Header extends Component {\n    static contextType = UserContext\n\n    render() {\n        return (\n            <Navbar collapseOnSelect expand=\"md\" bg=\"light\" variant=\"light\" sticky=\"top\">\n                <Link to=\"/\">\n                    <Navbar.Brand>\n                        <img\n                            alt=\"logo\"\n                            src={logo}\n                            width=\"55\"\n                            className=\"d-inline-block align-top\"\n                            style={{marginRight: \"10px\"}}\n                        />{' '}\n                        Die Zeitung\n                    </Navbar.Brand>\n                </Link>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Link to=\"/konfigurator\">\n                            Produktkonfigurator\n                        </Link>\n                    </Nav>\n                    <Nav>\n                        {\n                            !this.context.user ?\n                                <>\n                                    <Link to=\"/anmelden\">\n                                        <Button variant=\"outline-primary\" style={{marginRight: \"10px\"}}>\n                                            Anmelden\n                                        </Button>\n                                    </Link>\n                                    <Link to=\"/registrieren\">\n                                        <Button variant=\"outline-secondary\">\n                                            Registrieren\n                                        </Button>\n                                    </Link>\n                                </>\n                                :\n                                <Dropdown alignRight navbar>\n                                    <Dropdown.Toggle className=\"headerProfileBtn\">\n                                        <div className=\"headerName\">{this.context.user.email}</div>\n                                        <img\n                                            alt=\"Avatar\"\n                                            src={avatar}\n                                            className=\"d-inline-block align-top avatar\"\n                                        />{' '}\n                                    </Dropdown.Toggle>\n\n                                    <Dropdown.Menu>\n                                        <Link className=\"headerLink, dropdown-item\" to=\"/benutzerprofil\">Benutzerprofil</Link>\n                                        <Link className=\"headerLink, dropdown-item\" to=\"/abonnements\">Abonnements</Link>\n                                        <Dropdown.Divider/>\n                                        <Link className=\"headerLink, dropdown-item\" to=\"/abmelden\">Abmelden</Link>\n                                    </Dropdown.Menu>\n                                </Dropdown>\n                        }\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default Header\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom'\n\nimport Container from 'react-bootstrap/Container'\nimport Image from 'react-bootstrap/Image'\nimport Button from 'react-bootstrap/Button'\n\nimport logo from '../assets/images/logo.png'\nimport {UserContext} from \"../providers/UserProvider\";\n\nclass LandingPage extends Component {\n    static contextType = UserContext\n\n    render() {\n\n        return (\n            <>\n                <div className={\"landingPageContainer\"}>\n                    <Container>\n                        <Image\n                            alt=\"logo\"\n                            src={logo}\n                            width={\"80%\"}\n                            className=\"d-inline-block align-top\"\n                            style={{marginRight: \"10%\", marginLeft: \"10%\"}}\n                            fluid\n                        />{' '}\n                    </Container>\n                </div>\n                <div className={\"landingPageContainer\"}>\n                    <Container>\n                        {\n                            !this.context.user ?\n                                <h1>Herzlich Willkommen!</h1>\n                                :\n                                <h1>Herzlich Willkommen zurück {this.context.user.firstname + \" \" + this.context.user.lastname}!</h1>\n                        }\n                        <p>\n                            Hier bei deiner Zeitung vor Ort!<br/>\n                            Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor\n                            invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam\n                            et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est\n                            Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed\n                            diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n                            voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd\n                            gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n                            Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor\n                            invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam\n                            et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est\n                            Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed\n                            diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n                            voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd\n                            gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n                        </p>\n                    </Container>\n                </div>\n                {\n                    this.context.user ?\n                        <div className={\"landingPageContainer\"}>\n                            <Container>\n                                <h1>Was möchten Sie heute tun?</h1>\n                                <p>\n                                    Ihre Daten können Sie im Benutzerprofil einsehen und ändern:\n                                </p>\n                                <p>\n                                    <Button variant=\"outline-success\" onClick={() => {\n                                        this.props.history.push(`/benutzerprofil`)\n                                    }}>Zum Benutzerprofil</Button>\n                                </p>\n                                <p>\n                                    Einen Überblick über Ihre abgeschlossenen Abonnements finden Sie hier.<br/>\n                                    Ebenfalls können Sie ganz gemütlich ein Abonnement über das Abonnement Menu stornieren.\n                                </p>\n                                <p>\n                                    <Button variant=\"outline-warning\" onClick={() => {\n                                        this.props.history.push(`/abonnements`)\n                                    }}>Zu Ihren Abonnements</Button>\n                                </p>\n                            </Container>\n                        </div>\n                        : \"\"\n                }\n                <div className={\"landingPageContainer\"}>\n                    <Container>\n                        <h1>Schließe noch heute ein Abo ab!</h1>\n                        <p>\n                            In unserem individuellen Abokonfigurator finden Sie bestimmt das wonach Sie suchen.\n                        </p>\n                        <p>\n                            <Button variant=\"outline-primary\" onClick={() => {\n                                this.props.history.push(`/konfigurator`)\n                            }}>Konfigurator starten</Button>\n                        </p>\n                    </Container>\n                </div>\n                <div className={\"landingPageContainer\"}>\n                    <Container>\n                        <h1>Jetzt auch online!</h1>\n                        <p>\n                            Seit neustem gibt es unsere Ausgabe auch ganz bequem online auf das Gerät Ihrer Wahl.\n                            Konfigurieren Sie Ihr ganz persönliches Abonnement jetzt!\n                        </p>\n                        <p>\n                            <Button variant=\"outline-primary\" onClick={() => {\n                                this.props.history.push(`/konfigurator`)\n                            }}>Konfigurator starten</Button>\n                        </p>\n                    </Container>\n                </div>\n            </>\n        )\n            ;\n    }\n}\n\nexport default withRouter(LandingPage);\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\n\nimport Toast from \"react-bootstrap/Toast\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport {auth, generateUserDocument} from \"../config/firebase\";\n\nclass Registrieren extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeDifferentBillingAddress = this.onChangeDifferentBillingAddress.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.toggleDuplicateEmailAddress = this.toggleDuplicateEmailAddress.bind(this)\n\n        this.state = {\n            differentBillingAddress: false,\n            validated: false,\n            signIn: false,\n            duplicateEmailAddress: false,\n        }\n    }\n\n    onChangeDifferentBillingAddress() {\n        this.setState((prevState) => ({\n            differentBillingAddress: !prevState.differentBillingAddress\n        }))\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault()\n        this.setState({\n            validated: true,\n        })\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.stopPropagation()\n        } else {\n            console.log(\"Erstelle Kunde\")\n            let email = form[8].checked ? form[13].value : form[9].value;\n            let password = form[8].checked ? form[15].value : form[11].value\n            let titleAddress = form[1].value\n            let firstname = form[2].value\n            let lastname = form[3].value\n            let companyname = form[0].value\n            let phone = form[8].checked ? form[14].value : form[10].value\n            let deliveryAddress = {\n                city: form[5].value,\n                plz: form[6].value,\n                street: form[4].value,\n                state: form[7].value,\n            }\n            let billingAddress = {\n                city: form[8].checked ? form[10].value : form[5].value,\n                plz: form[8].checked ? form[11].value : form[6].value,\n                street: form[8].checked ? form[9].value : form[4].value,\n                state: form[8].checked ? form[12].value : form[7].value,\n            }\n\n            try {\n                const {user} = await auth.createUserWithEmailAndPassword(email, password);\n                await generateUserDocument(user, {\n                    titleAddress,\n                    firstname,\n                    lastname,\n                    companyname,\n                    phone,\n                    billingAddress,\n                    deliveryAddress\n                });\n                this.setState({\n                    signIn: false,\n                })\n                this.props.handleLogIn()\n            } catch (error) {\n                console.error(\"Error Signing up with email and password\", error)\n                if (error.code === \"auth/email-already-in-use\") {\n                    this.setState({\n                        duplicateEmailAddress: true,\n                        signIn: false,\n                    })\n                }\n            }\n        }\n    }\n\n    toggleDuplicateEmailAddress() {\n        this.setState({\n            duplicateEmailAddress: false,\n        })\n    }\n\n    render() {\n\n        const {differentBillingAddress, validated, signIn, duplicateEmailAddress} = this.state\n        const {deliveryAddress} = this.props\n\n        return (\n            <div className={\"registrieren\"}>\n                <h1 className={\"registrierenHeadline\"}>Registrieren</h1>\n                <Form noValidate validated={validated} onSubmit={this.handleSubmit}>\n                    <Form.Group controlId=\"formCompanyName\">\n                        <Form.Control disabled={signIn} name=\"companyName\" placeholder=\"Firmenname\"/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formAnrede\">\n                        <Form.Control disabled={signIn} required as=\"select\" defaultValue=\"Herr\">\n                            <option>Herr</option>\n                            <option>Frau</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formFirstName\">\n                            <Form.Control disabled={signIn} required name=\"firstName\" placeholder=\"Vorname\"/>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Bitte geben Sie Ihren Vornamen ein.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"formLastName\">\n                            <Form.Control disabled={signIn} required name=\"lastName\" placeholder=\"Nachname\"/>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Bitte geben Sie Ihren Nachnamen ein.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n\n                    {\n                        !differentBillingAddress ?\n                            <p>Adresse</p>\n                            :\n                            <p>Lieferdresse</p>\n                    }\n\n                    <Form.Group controlId=\"formGridAddress1\">\n                        <Form.Control disabled={signIn} required\n                                      defaultValue={deliveryAddress ? deliveryAddress.street : \"\"}\n                                      placeholder=\"Straße\"/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Bitte geben Sie Ihre Straße ein.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridCity1\">\n                            <Form.Control disabled={signIn} required name=\"city\"\n                                          defaultValue={deliveryAddress ? deliveryAddress.city : \"\"}\n                                          placeholder=\"Stadt\"/>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Bitte geben Sie Ihre Stadt ein.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridZip1\">\n                            <Form.Control disabled={signIn} required\n                                          defaultValue={deliveryAddress ? deliveryAddress.plz : \"\"}\n                                          type=\"number\" name=\"zip\" placeholder=\"PLZ\" minLength={5}/>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Bitte geben Sie eine valide Postleitzahl ein.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group controlId=\"formGridState1\">\n                        <Form.Control disabled={signIn} required name=\"state\" as=\"select\"\n                                      defaultValue={deliveryAddress ? deliveryAddress.state : \"Deutschland\"}>\n                            <option>Deutschland</option>\n                            <option>Österreich</option>\n                            <option>Schweiz</option>\n                            <option>Frankreich</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Check disabled={signIn} onChange={this.onChangeDifferentBillingAddress}\n                                    label=\"Abweichende Rechnungsadresse\"/>\n                    </Form.Group>\n\n                    {\n                        differentBillingAddress ?\n                            <>\n                                <p>Rechnungsdresse</p>\n\n                                <Form.Group controlId=\"formGridAddress2\">\n                                    <Form.Control disabled={signIn} required placeholder=\"Straße\"/>\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Bitte geben Sie Ihre Straße ein.\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridCity2\">\n                                        <Form.Control disabled={signIn} required name=\"city\" placeholder=\"Stadt\"/>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Bitte geben Sie Ihre Stadt ein.\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridZip2\">\n                                        <Form.Control disabled={signIn} required type=\"number\" name=\"zip\"\n                                                      placeholder=\"PLZ\" minLength={5}/>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Bitte geben Sie eine valide Postleitzahl ein.\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Group controlId=\"formGridState2\">\n                                    <Form.Control disabled={signIn} required name=\"state\" as=\"select\"\n                                                  defaultValue=\"Deutschland\">\n                                        <option>Deutschland</option>\n                                        <option>Österreich</option>\n                                        <option>Schweiz</option>\n                                        <option>Frankreich</option>\n                                    </Form.Control>\n                                </Form.Group>\n                            </>\n                            :\n                            \"\"\n                    }\n\n                    <br/>\n\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Control disabled={signIn} required type=\"email\" placeholder=\"E-Mail-Adresse\"/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Bitte geben Sie Ihre E-Mail-Adresse ein.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPhone\">\n                        <Form.Control disabled={signIn} required type=\"number\" placeholder=\"Telefonnummer\"/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Bitte geben Sie Ihre Telefonnummer ein.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Control disabled={signIn} aria-describedby=\"passwordHelpBlock\" required type=\"password\"\n                                      placeholder=\"Passwort\" minLength={6}/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Bitte geben Sie Ihr Passwort ein.\n                        </Form.Control.Feedback>\n                        <Form.Text id=\"passwordHelpBlock\" muted>\n                            Ihr Passwort muss mindestens 6 Zeichen haben.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Toast className={\"toastErrorBorder\"} show={duplicateEmailAddress}\n                           onClose={this.toggleDuplicateEmailAddress}>\n                        <Toast.Header className={\"toastError\"}>\n                            <strong className=\"mr-auto\">Fehler</strong>\n                        </Toast.Header>\n                        <Toast.Body>Die eingegebene E-Mail-Adresse ist bereits vorhanden. Möchten Sie sich <Link\n                            to=\"/anmelden\">anmelden</Link>?</Toast.Body>\n                    </Toast>\n\n                    <br/>\n\n                    <Button variant=\"primary\" type=\"submit\" style={{width: \"100%\"}}>\n                        {\n                            signIn ?\n                                <Spinner\n                                    as=\"span\"\n                                    animation=\"border\"\n                                    size=\"md\"\n                                    role=\"status\"\n                                    aria-hidden=\"true\"\n                                />\n                                :\n                                \"Registrieren\"\n                        }\n                    </Button>\n\n                    <Form.Text muted style={{textAlign: \"right\"}}>\n                        Sie haben bereits einen User? <Link to=\"/anmelden\">Anmelden</Link>\n                    </Form.Text>\n                </Form>\n            </div>\n        );\n    }\n}\n\nRegistrieren.propTypes = {\n    handleLogIn: PropTypes.func.isRequired,\n    deliveryAddress: PropTypes.object,\n}\n\nexport default Registrieren;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Toast from \"react-bootstrap/Toast\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport {auth} from \"../../config/firebase\";\n\nclass LoginForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.toggleUserMissing = this.toggleUserMissing.bind(this)\n        this.togglePasswordWrong = this.togglePasswordWrong.bind(this)\n\n        this.state = {\n            validated: false,\n            logIn: false,\n            userMissing: false,\n            passwordWrong: false,\n        }\n    }\n\n\n    handleSubmit(event) {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.stopPropagation()\n        } else {\n            this.setState({\n                logIn: true,\n            })\n\n            auth.signInWithEmailAndPassword(form[0].value, form[1].value)\n                .catch(error => {\n                    console.error(\"Error signing in with password and email\", error)\n                    if (error.code === \"auth/wrong-password\") {\n                        this.setState({\n                            logIn: false,\n                            passwordWrong: true,\n                            userMissing: false,\n                        })\n                    }\n                    if (error.code === \"auth/user-not-found\") {\n                        this.setState({\n                            logIn: false,\n                            userMissing: true,\n                            passwordWrong: false,\n                        })\n                    }\n                })\n            let that = this\n            auth.onAuthStateChanged(function (user) {\n                if (user) {\n                    that.setState({\n                        login: false,\n                    })\n                    that.props.handleSuccessfullyLogIn()\n                }\n            })\n        }\n        event.preventDefault()\n\n        this.setState({\n            validated: true,\n        })\n    }\n\n    toggleUserMissing() {\n        this.setState({\n            userMissing: false,\n        })\n    }\n\n    togglePasswordWrong() {\n        this.setState({\n            passwordWrong: false,\n        })\n    }\n\n    render() {\n\n        const {\n            validated,\n            logIn,\n            userMissing,\n            passwordWrong\n        } = this.state\n\n        return (\n            <Form noValidate validated={validated} onSubmit={this.handleSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Control disabled={logIn} required type=\"email\" placeholder=\"E-Mail-Adresse\"/>\n                    <Form.Control.Feedback type=\"invalid\">\n                        Bitte geben Sie Ihre E-Mail-Adresse ein.\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Control disabled={logIn} required type=\"password\" placeholder=\"Passwort\"/>\n                    <Form.Control.Feedback type=\"invalid\">\n                        Bitte geben Sie Ihr Passwort ein.\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Toast className={\"toastErrorBorder, loginToast\"} show={userMissing} onClose={this.toggleUserMissing}>\n                    <Toast.Header className={\"toastError\"}>\n                        <strong className=\"mr-auto\">Fehler</strong>\n                    </Toast.Header>\n                    <Toast.Body>Die eingegebene E-Mail-Adresse ist nicht vorhanden. Wollen Sie sich <Link\n                        to=\"/registrieren\">registrieren</Link>?</Toast.Body>\n                </Toast>\n\n                <Toast className={\"toastErrorBorder, loginToast\"} show={passwordWrong}\n                       onClose={this.togglePasswordWrong}>\n                    <Toast.Header className={\"toastError\"}>\n                        <strong className=\"mr-auto\">Fehler</strong>\n                    </Toast.Header>\n                    <Toast.Body>Das eingegebe Passwort ist falsch. Bitte versuchen Sie es erneut!</Toast.Body>\n                </Toast>\n\n                <Button variant=\"primary\" type=\"submit\" style={{width: \"100%\"}}>\n                    {\n                        logIn ?\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"md\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                            :\n                            \"Anmelden\"\n                    }\n                </Button>\n\n                <Form.Text muted style={{textAlign: \"right\"}}>\n                    Sie haben noch keinen User? <Link to=\"/registrieren\">Registrieren</Link>\n                </Form.Text>\n            </Form>\n        );\n    }\n}\n\nLoginForm.propTypes = {\n    handleSuccessfullyLogIn: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\n\nimport LoginForm from \"./fragment/LoginForm\";\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSuccessfullyLogIn = this.handleSuccessfullyLogIn.bind(this)\n    }\n\n    handleSuccessfullyLogIn() {\n        this.props.handleLogIn()\n    }\n\n    render() {\n        return (\n            <div className={\"registrieren\"}>\n                <h1 className={\"registrierenHeadline\"}>Anmelden</h1>\n                <LoginForm handleSuccessfullyLogIn={this.handleSuccessfullyLogIn}/>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    handleLogIn: PropTypes.func.isRequired,\n}\n\nexport default Login\n","export default __webpack_public_path__ + \"static/media/newspaper.12fc473d.jpg\";","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {withRouter} from 'react-router-dom'\n\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport newspaper from \"../../assets/images/newspaper.jpg\"\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport LoginForm from \"../fragment/LoginForm\";\nimport {UserContext} from \"../../providers/UserProvider\";\n\nclass Step1Delivery extends Component {\n    static contextType = UserContext\n\n    constructor(props) {\n        super(props);\n        this.handleLogIn = this.handleLogIn.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.handleSuccessfullyLogIn = this.handleSuccessfullyLogIn.bind(this)\n        this.onChangeAddress = this.onChangeAddress.bind(this)\n        this.startConfig = this.startConfig.bind(this)\n\n        this.formAddress = React.createRef()\n\n        this.state = {\n            showModal: false,\n            validatedAddress: false,\n            deliveryAddress: {\n                state: \"Deutschland\"\n            },\n        }\n    }\n\n    handleLogIn() {\n        this.setState({\n            showModal: true,\n        })\n    }\n\n    handleClose() {\n        this.setState({\n            showModal: false,\n        })\n    }\n\n    handleSuccessfullyLogIn() {\n        this.setState({\n            showModal: false,\n        })\n    }\n\n    onChangeAddress(event) {\n        let fieldName = event.target.name;\n        let fieldVal = event.target.value;\n        let newDeliveryAddress = this.state.deliveryAddress\n        newDeliveryAddress[fieldName] = fieldVal\n\n        this.setState({\n            deliveryAddress: newDeliveryAddress,\n        })\n    }\n\n    startConfig(event) {\n        const form = this.formAddress.current\n        event.preventDefault()\n        if (form.checkValidity() === false) {\n            event.stopPropagation()\n        } else {\n            this.props.changeDeliveryAddress(this.state.deliveryAddress)\n            this.props.history.push(`/konfigurator/detail`)\n        }\n        this.setState({\n            validatedAddress: true,\n        })\n    }\n\n    render() {\n\n        const {showModal, validatedAddress} = this.state\n\n        return (\n            <Container style={{paddingTop: \"1.5rem\"}}>\n                <Card>\n                    <Card.Img variant=\"top\" className={\"productImage\"} src={newspaper}/>\n                    <Card.Body>\n                        <Card.Title style={{fontSize: \"2rem\"}}>Die Zeitung - Gedruckt</Card.Title>\n                        <Card.Text>\n                            Wer sich intelligent informieren möchte, liest <em>die Zeitung</em>: gründlich recherchierte\n                            Fakten,\n                            präzise Analysen, klug geschriebene Kommentare. Eine Zeitung, gemacht von erstklassigen\n                            Journalisten für Leser mit höchsten Ansprüchen.\n                        </Card.Text>\n                    </Card.Body>\n                    <ListGroup className=\"list-group-flush\">\n                        <ListGroupItem>\n                            Geben Sie unten Ihre Adresse an und wählen Sie anschließend folgende Optionen in unserem\n                            Konfigurator:<br/><br/>\n                            <ul>\n                                <li>Ausgabe</li>\n                                <li>Art des Abonnements</li>\n                                <li>Zahlungsart und Zahlungszeitpunkt</li>\n                                <li>Start-Datum Ihres Abonnements</li>\n                            </ul>\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            <Form noValidate validated={validatedAddress} ref={this.formAddress}>\n                                <h4 className=\"deliveryAddress\">Lieferadresse</h4>\n                                {\n                                    this.context.user ?\n                                        <Button className=\"headerProfileBtn deliveryLoginBtn\">\n                                            <img\n                                                alt=\"Avatar\"\n                                                src={avatar}\n                                                className=\"d-inline-block align-top avatar deliveryAvatar\"\n                                            />{' '}\n                                            <div className=\"headerName\">{this.context.user.email}</div>\n                                        </Button>\n                                        :\n                                        <Button className=\"headerProfileBtn deliveryLoginBtn\"\n                                                onClick={this.handleLogIn}>\n                                            <img\n                                                alt=\"Avatar\"\n                                                src={avatar}\n                                                className=\"d-inline-block align-top avatar deliveryAvatar\"\n                                            />{' '}\n                                            <div className=\"headerName\">Mit Account fortfahren</div>\n                                        </Button>\n                                }\n                                <Form.Group controlId=\"formGridAddress\">\n                                    <Form.Control name=\"street\" required placeholder=\"Straße\"\n                                                  defaultValue={this.context.user ? this.context.user.deliveryAddress.street : \"\"}\n                                                  onChange={this.onChangeAddress}/>\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Bitte geben Sie Ihre Straße ein.\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridCity\">\n                                        <Form.Control required name=\"city\" placeholder=\"Stadt\"\n                                                      defaultValue={this.context.user ? this.context.user.deliveryAddress.city : \"\"}\n                                                      onChange={this.onChangeAddress}/>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Bitte geben Sie Ihre Stadt ein.\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridZip\">\n                                        <Form.Control required type=\"number\" name=\"plz\"\n                                                      placeholder=\"PLZ\"\n                                                      defaultValue={this.context.user ? this.context.user.deliveryAddress.plz : \"\"}\n                                                      onChange={this.onChangeAddress}/>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Bitte geben Sie Ihre Postleitzahl ein.\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Group controlId=\"formGridState\">\n                                    <Form.Control required name=\"state\" as=\"select\"\n                                                  defaultValue={this.context.user ? this.context.user.deliveryAddress.state : \"\"}\n                                                  onChange={this.onChangeAddress}>\n                                        <option>Deutschland</option>\n                                        <option>Österreich</option>\n                                        <option>Schweiz</option>\n                                        <option>Frankreich</option>\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form>\n                        </ListGroupItem>\n                    </ListGroup>\n                    <Card.Footer>\n                        <Card>\n                            <Card.Body>\n                                <div className=\"priceTag\">\n                                    <div className=\"priceTagValue\">10€*</div>\n                                </div>\n                                <div className=\"priceTagText\">\n                                    Die Zeitung - Gedruckt\n                                    <Button onClick={this.startConfig} style={{float: \"right\"}}>\n                                        Konfigurieren\n                                    </Button>\n                                </div>\n                                <p className=\"priceTagMuted\">*Grundpreis</p>\n                            </Card.Body>\n                        </Card>\n                    </Card.Footer>\n                </Card>\n                <Modal show={showModal} onHide={this.handleClose} backdrop=\"static\" size=\"lg\"\n                       aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Anmelden</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <LoginForm handleSuccessfullyLogIn={this.handleSuccessfullyLogIn}/>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Abbrechen\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Container>\n        );\n    }\n}\n\nStep1Delivery.propTypes = {\n    changeDeliveryAddress: PropTypes.func.isRequired,\n};\n\nexport default withRouter(Step1Delivery);\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Button from \"react-bootstrap/Button\";\n\nclass AboEdition extends Component {\n\n    render() {\n\n        const {\n            edition,\n            cssCardClass,\n            title,\n            aboWeekend,\n            currentPriceID,\n            period,\n            otherCountry,\n            otherCountryDelivery,\n            checkedYearly\n        } = this.props\n\n        return (\n            <Card className={\"detailVersion \" + cssCardClass}>\n                <Card.Header className=\"detailVersionHeader\">\n                    {title.toUpperCase()}<br/>\n                    <span>\n                        <span\n                            className=\"detailVersionHeaderValue\">{(aboWeekend ? Math.round(edition.price[currentPriceID] * 0.6) : edition.price[currentPriceID]) + this.props.getDistanceSupplement()}</span>\n                        €/{period}\n                    </span>\n                </Card.Header>\n                <ListGroup variant=\"flush\"\n                           style={{borderBottom: \"1px solid rgba(0,0,0,.125)\"}}>\n                    <ListGroup.Item className=\"detailVersionItem\">Globaler Teil inkl. ausgewählter\n                        Lokalteil</ListGroup.Item>\n                    {\n                        edition.isAvailable ?\n                            <ListGroup.Item className=\"detailVersionItem\">Geliefert durch\n                                Austräger</ListGroup.Item>\n                            :\n                            <ListGroup.Item className=\"detailVersionItem\">Wird mit DHL\n                                versendet</ListGroup.Item>\n                    }\n                    {\n                        edition.isAvailable ?\n                            <ListGroup.Item\n                                className=\"detailVersionItem\">inkl. {this.props.getDistanceSupplement()}€\n                                Entfernungspauschale</ListGroup.Item>\n                            :\n                            <ListGroup.Item\n                                className=\"detailVersionItem\">inkl. {otherCountry ? currentPriceID === 0 ? otherCountryDelivery : (otherCountryDelivery / 2) : this.props.getDistanceSupplement() === 0 ? \"20\" : this.props.getDistanceSupplement() * 2}€\n                                Versandkosten {otherCountry ? \"(International)\" : \"\"}</ListGroup.Item>\n                    }\n                    <ListGroup.Item\n                        className=\"detailVersionItem\">{aboWeekend ? \"Wochnendausgabe (Fr+Sa)\" : \"Tägliche Ausgabe\"}</ListGroup.Item>\n                    <ListGroup.Item\n                        className=\"detailVersionItem\">{checkedYearly ? \"Jährliche \" : \"Monatliche \"} Zahlung</ListGroup.Item>\n                </ListGroup>\n                <Card.Footer className=\"detailVersionFooter\">\n                    <Button\n                        onClick={() => (this.props.handleVariantSelect(edition.id))}>Auswählen</Button>\n                </Card.Footer>\n            </Card>\n        );\n    }\n}\n\nAboEdition.propTypes = {\n    edition: PropTypes.object.isRequired,\n    cssCardClass: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    aboWeekend: PropTypes.bool.isRequired,\n    currentPriceID: PropTypes.number.isRequired,\n    period: PropTypes.string.isRequired,\n    otherCountry: PropTypes.bool.isRequired,\n    otherCountryDelivery: PropTypes.number.isRequired,\n    checkedYearly: PropTypes.bool.isRequired,\n    handleVariantSelect: PropTypes.func.isRequired,\n    calcDistance: PropTypes.number.isRequired,\n    getDistanceSupplement: PropTypes.func.isRequired,\n};\n\nexport default AboEdition;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, withRouter} from \"react-router-dom\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport {Grid, Typography, Switch} from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport deLocale from \"date-fns/locale/de\";\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from \"@material-ui/pickers\";\nimport {FormControl, InputGroup, Row} from \"react-bootstrap\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Col from \"react-bootstrap/Col\";\nimport Modal from \"react-bootstrap/Modal\";\nimport AboEdition from \"../fragment/AboEdition\";\nimport {UserContext} from \"../../providers/UserProvider\";\n\nclass Step2Detail extends Component {\n    static contextType = UserContext\n\n    constructor(props) {\n        super(props);\n        this.handleYearlyChange = this.handleYearlyChange.bind(this)\n        this.handleAboChange = this.handleAboChange.bind(this)\n        this.handleCheckout = this.handleCheckout.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.handleVariantSelect = this.handleVariantSelect.bind(this)\n        this.getDistanceSupplement = this.getDistanceSupplement.bind(this)\n\n        this.state = {\n            isLoading: true,\n            checkedYearly: true,\n            aboWeekend: false,\n            period: \"Jährlich\",\n            price: {},\n            currentPriceID: 0,\n            calcDistance: 0,\n            selectedAbo: \"stadt\",\n            showModal: false,\n            otherCountry: false,\n            otherCountryDelivery: 50,\n            cssEdition: {\n                sport: \"\",\n                stadt: \"recommended\",\n                land: \"\",\n            },\n        }\n    }\n\n    componentDidMount() {\n        let state = this.context.user ? this.context.user.deliveryAddress.state : this.props.deliveryAddress.state\n        if (state === \"Deutschland\") {\n            let plz = this.context.user ? this.context.user.deliveryAddress.plz : this.props.deliveryAddress.plz\n            const headers = {'Access-Control-Allow-Origin': '*'}\n            fetch(`http://localhost:4500/functions/getDistanceFromCompanyToDestinationPlz/${plz}`, {\n                method: 'GET',\n                header: headers\n            })\n                .then((response) => response.json())\n                .then((json) => {\n                    const calcDistance = json.distance\n                    console.log(\"Got Distance \" + calcDistance);\n\n                    fetch(`http://localhost:4500/functions/getLocalVersionsForPlz/${plz}`, {\n                        method: 'GET',\n                        header: headers\n                    })\n                        .then((response) => response.json())\n                        .then((localVersions) => {\n                            console.log(\"Got \" + Object.values(localVersions).length + \" LocalVersions\");\n                            let stadt = false\n                            let sport = false\n                            let land = false\n                            Object.values(localVersions).forEach((version) => {\n                                // eslint-disable-next-line default-case\n                                switch (version.name) {\n                                    case \"Stadtausgabe\":\n                                        stadt = true\n                                        break;\n                                    case \"Sportversion\":\n                                        sport = true\n                                        break;\n                                    case \"Landkreisinfos\":\n                                        land = true\n                                        break;\n                                }\n                            })\n\n                            this.setState({\n                                calcDistance: calcDistance,\n                                isLoading: false,\n                                price: {\n                                    sport: {\n                                        id: 2,\n                                        isAvailable: sport,\n                                        price: [\n                                            130,\n                                            17,\n                                        ]\n                                    },\n                                    stadt: {\n                                        id: 1,\n                                        isAvailable: stadt,\n                                        price: [\n                                            120,\n                                            16,\n                                        ]\n                                    },\n                                    land: {\n                                        id: 3,\n                                        isAvailable: land,\n                                        price: [\n                                            140,\n                                            18,\n                                        ]\n                                    },\n                                },\n                            })\n                        });\n                });\n        } else {\n            this.setState({\n                calcDistance: 0,\n                isLoading: false,\n                otherCountry: true,\n                price: {\n                    sport: {\n                        id: 2,\n                        isAvailable: false,\n                        price: [\n                            130 + this.state.otherCountryDelivery,\n                            17 + (this.state.otherCountryDelivery / 2),\n                        ]\n                    },\n                    stadt: {\n                        id: 1,\n                        isAvailable: false,\n                        price: [\n                            120 + this.state.otherCountryDelivery,\n                            16 + (this.state.otherCountryDelivery / 2),\n                        ]\n                    },\n                    land: {\n                        id: 3,\n                        isAvailable: false,\n                        price: [\n                            140 + this.state.otherCountryDelivery,\n                            18 + (this.state.otherCountryDelivery / 2),\n                        ]\n                    },\n                },\n            })\n        }\n    }\n\n    handleYearlyChange() {\n        if (this.state.checkedYearly) {\n            this.setState((prevState) => ({\n                checkedYearly: !prevState.checkedYearly,\n                period: \"Monatlich\",\n                currentPriceID: 1,\n            }))\n        } else {\n            this.setState((prevState) => ({\n                checkedYearly: !prevState.checkedYearly,\n                period: \"Jährlich\",\n                currentPriceID: 0,\n            }))\n        }\n    }\n\n    handleAboChange() {\n        this.setState((prevState) => ({\n            aboWeekend: !prevState.aboWeekend,\n        }))\n    }\n\n    handleVariantSelect(variant) {\n        // eslint-disable-next-line default-case\n        switch (variant) {\n            case 2:\n                this.setState({\n                    selectedAbo: \"sport\",\n                    cssEdition: {\n                        sport: \"recommended\",\n                        stadt: \"\",\n                        land: \"\",\n                    },\n                })\n                break;\n            case 1:\n                this.setState({\n                    selectedAbo: \"stadt\",\n                    cssEdition: {\n                        sport: \"\",\n                        stadt: \"recommended\",\n                        land: \"\",\n                    },\n                })\n                break;\n            case 3:\n                this.setState({\n                    selectedAbo: \"land\",\n                    cssEdition: {\n                        sport: \"\",\n                        stadt: \"\",\n                        land: \"recommended\",\n                    },\n                })\n                break;\n        }\n    }\n\n    handleCheckout() {\n        const minDate = new Date();\n        minDate.setDate(minDate.getDate() + 2);\n\n        if (this.props.startDate.setHours(0, 0, 0, 0) >= minDate.setHours(0, 0, 0, 0)) {\n            let newAbo = {\n                userId: this.context.user ? this.context.user.uid : 0,\n                created: new Date().toLocaleString().split(\",\")[0],\n                startabodate: this.props.startDate.toLocaleString().split(\",\")[0],\n                endabodate: \"\",\n                dataprivacyaccepted: false,\n                abotype: \"Printed\",              //Printed or E-paper or Website\n                deliverymethod: this.state.price[this.state.selectedAbo].isAvailable ? \"Delivery man\" : \"Post\",          //Post or Delivery man\n                paymenttype: \"\",      //Invoice or Direct debit\n                payment: this.state.checkedYearly ? \"Annual\" : \"Monthly\",               //Monthly or Annual\n                subscriptiontype: this.state.aboWeekend ? \"Weekend\" : \"Daily\",       //Daily or Weekend\n                calculatedprice: (this.state.aboWeekend ? Math.round(this.state.price[this.state.selectedAbo].price[1] * 0.6) : this.state.price[this.state.selectedAbo].price[1]) + this.getDistanceSupplement(), //Pay Monthly\n                calculatedyearprice: (this.state.aboWeekend ? Math.round(this.state.price[this.state.selectedAbo].price[0] * 0.6) : this.state.price[this.state.selectedAbo].price[0]) + this.getDistanceSupplement(), //Pay Yearly\n                localpaperversions: this.state.price[this.state.selectedAbo].id,         //Id from localpaperversions\n                hintDeliveryMan: this.state.price[this.state.selectedAbo].isAvailable ? this.props.hint : \"\", //additional hint for the Delivery man\n            }\n            this.props.onAboCreate(newAbo)\n\n            if (this.context.user) {\n                this.props.history.push(`/konfigurator/checkout`)\n            } else {\n                this.setState({\n                    showModal: true,\n                })\n            }\n        }\n    }\n\n    handleClose() {\n        this.setState({\n            showModal: false,\n        })\n    }\n\n    getDistanceSupplement() {\n        const calcDistance = this.state.calcDistance\n        if (calcDistance === 0) {\n            return 0\n        } else if (calcDistance > 0 && calcDistance <= 10) {\n            return 5\n        } else if (calcDistance > 10 && calcDistance <= 30) {\n            return 10\n        } else if (calcDistance > 30) {\n            return 15\n        }\n    }\n\n    render() {\n\n        const {\n            checkedYearly,\n            period,\n            price,\n            currentPriceID,\n            aboWeekend,\n            isLoading,\n            selectedAbo,\n            showModal,\n            otherCountry,\n            otherCountryDelivery,\n            cssEdition,\n            calcDistance,\n        } = this.state\n        const {startDate, handleStartDateChange, hint, handleChangeHint} = this.props\n\n        const minDate = new Date();\n        minDate.setDate(minDate.getDate() + 2);\n\n        return (\n            <>\n                {\n                    isLoading ?\n                        <Container>\n                            <Row>\n                                <Col style={{textAlign: \"center\"}}>\n                                    <Spinner className=\"loadingSpinner\" animation=\"border\" variant=\"info\"/>\n                                </Col>\n                            </Row>\n                        </Container>\n                        :\n                        <>\n                            <div className=\"landingPageContainer\">\n                                <Container>\n                                    <h1 className=\"detailVersionChapter\">Konfigurieren Sie Ihr Abonnement</h1>\n                                    <p>\n                                        Wer sich intelligent informieren möchte, liest <em>die Zeitung</em>: gründlich\n                                        recherchierte\n                                        Fakten,\n                                        präzise Analysen, klug geschriebene Kommentare. Eine Zeitung, gemacht von\n                                        erstklassigen\n                                        Journalisten für Leser mit höchsten Ansprüchen.\n                                    </p>\n                                </Container>\n                            </div>\n                            <div className=\"landingPageContainer\">\n                                <Container>\n                                    <h2 className=\"detailVersionChapter\">Wählen Sie die Ausgabe, die am besten zu\n                                        Ihnen passt:</h2>\n                                    <Typography component=\"div\">\n                                        <Grid component=\"label\" container alignItems=\"center\" justifyContent=\"center\"\n                                              spacing={0}>\n                                            <Grid item>Monatliche Zahlung</Grid>\n                                            <Grid item>\n                                                <Switch color={\"primary\"} size=\"medium\" checked={checkedYearly}\n                                                        onChange={this.handleYearlyChange} name=\"checkedYearly\"/>\n                                            </Grid>\n                                            <Grid item>Jährliche Zahlung</Grid>\n                                        </Grid>\n                                    </Typography>\n                                    <Typography component=\"div\">\n                                        <Grid component=\"label\" container alignItems=\"center\" justifyContent=\"center\"\n                                              spacing={0}>\n                                            <Grid item>Tägliches Abo (Mo-So)</Grid>\n                                            <Grid item>\n                                                <Switch color={\"secondary\"} size=\"medium\" checked={aboWeekend}\n                                                        onChange={this.handleAboChange} name=\"aboDailyWeekend\"/>\n                                            </Grid>\n                                            <Grid item>Wochenendabo (Fr+Sa)</Grid>\n                                        </Grid>\n                                    </Typography>\n                                    <div className=\"detailVersionList\">\n                                        <Row>\n                                            <Col style={{marginBottom: \"1rem\"}}>\n                                                <AboEdition cssCardClass={cssEdition.sport} title={\"SPORTVERSION\"}\n                                                            aboWeekend={aboWeekend} edition={price.sport}\n                                                            currentPriceID={currentPriceID} period={period}\n                                                            otherCountry={otherCountry} calcDistance={calcDistance}\n                                                            otherCountryDelivery={otherCountryDelivery}\n                                                            checkedYearly={checkedYearly}\n                                                            getDistanceSupplement={this.getDistanceSupplement}\n                                                            handleVariantSelect={this.handleVariantSelect}/>\n                                            </Col>\n                                            <Col style={{marginBottom: \"1rem\"}}>\n                                                <AboEdition cssCardClass={cssEdition.stadt} title={\"STADTAUSGABE\"}\n                                                            aboWeekend={aboWeekend} edition={price.stadt}\n                                                            currentPriceID={currentPriceID} period={period}\n                                                            otherCountry={otherCountry} calcDistance={calcDistance}\n                                                            otherCountryDelivery={otherCountryDelivery}\n                                                            checkedYearly={checkedYearly}\n                                                            getDistanceSupplement={this.getDistanceSupplement}\n                                                            handleVariantSelect={this.handleVariantSelect}/>\n                                            </Col>\n                                            <Col style={{marginBottom: \"1rem\"}}>\n                                                <AboEdition cssCardClass={cssEdition.land} title={\"LANDKREISINFO\"}\n                                                            aboWeekend={aboWeekend} edition={price.land}\n                                                            currentPriceID={currentPriceID} period={period}\n                                                            otherCountry={otherCountry} calcDistance={calcDistance}\n                                                            otherCountryDelivery={otherCountryDelivery}\n                                                            checkedYearly={checkedYearly}\n                                                            getDistanceSupplement={this.getDistanceSupplement}\n                                                            handleVariantSelect={this.handleVariantSelect}/>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </Container>\n                            </div>\n                            <div className=\"landingPageContainer\">\n                                <Container>\n                                    <h2 className=\"detailVersionChapter\">Wann soll Ihr Abo beginnen?</h2>\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={deLocale}>\n                                        <Grid container justifyContent=\"space-around\">\n                                            <KeyboardDatePicker\n                                                disableToolbar\n                                                minDate={minDate}\n                                                variant=\"inline\"\n                                                format=\"dd.MM.yyyy\"\n                                                margin=\"normal\"\n                                                id=\"date-picker-startDate\"\n                                                label=\"Start des Abos:\"\n                                                value={startDate}\n                                                onChange={handleStartDateChange}\n                                                KeyboardButtonProps={{\n                                                    'aria-label': 'change date',\n                                                }}\n                                                invalidDateMessage=\"Bitte geben Sie ein Datum in folgendem Format ein: dd.MM.yyyy\"\n                                                minDateMessage=\"Das Abo kann frühestens in zwei Tagen starten!\"\n                                            />\n                                        </Grid>\n                                    </MuiPickersUtilsProvider>\n                                </Container>\n                            </div>\n                            {\n                                price[selectedAbo].isAvailable ?\n                                    <div className=\"landingPageContainer\">\n                                        <Container>\n                                            <h2 className=\"detailVersionChapter\">Haben Sie noch einen Hinweis für\n                                                den Austräger?</h2>\n                                            <InputGroup>\n                                                <FormControl as=\"textarea\"\n                                                             placeholder=\"z.B. Wo befindet sich ihr Zeitungsrohr? etc.\"\n                                                             value={hint} onChange={handleChangeHint}\n                                                             aria-label=\"With textarea\"/>\n                                            </InputGroup>\n                                        </Container>\n                                    </div>\n                                    : \"\"\n                            }\n                            <div className=\"landingPageContainer\">\n                                <Container>\n                                    <h2 className=\"detailVersionChapter\">Wenn Sie fertig sind, dann können Sie zur Kasse\n                                        gehen</h2>\n                                    <Row>\n                                        <Col style={{textAlign: \"center\"}}>\n                                            <Button onClick={this.handleCheckout} variant=\"success\" size=\"lg\">Zur\n                                                Kasse</Button>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </div>\n                        </>\n                }\n                <Modal show={showModal} onHide={this.handleClose} backdrop=\"static\" size=\"lg\"\n                       aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Checkout</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body style={{textAlign: \"center\"}}>\n                        <p>Bitte melden Sie sich an. Wenn Sie noch keinen User haben, dann können Sie sich\n                            registrieren.</p>\n                        <Link to=\"/anmelden\">\n                            <Button variant=\"outline-primary\" style={{marginRight: \"10px\"}}>\n                                Anmelden\n                            </Button>\n                        </Link>\n                        <Link to=\"/registrieren\">\n                            <Button variant=\"outline-secondary\">\n                                Registrieren\n                            </Button>\n                        </Link>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Abbrechen\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n\n}\n\nStep2Detail.propTypes = {\n    startDate: PropTypes.instanceOf(Date).isRequired,\n    handleStartDateChange: PropTypes.func.isRequired,\n    hint: PropTypes.string.isRequired,\n    handleChangeHint: PropTypes.func.isRequired,\n    onAboCreate: PropTypes.func.isRequired,\n    deliveryAddress: PropTypes.object,\n};\n\nexport default withRouter(Step2Detail);\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Col from \"react-bootstrap/Col\";\nimport {UserContext} from \"../../providers/UserProvider\";\n\nclass AddressForm extends Component {\n    static contextType = UserContext\n\n    render() {\n\n        const {\n            validated,\n            handleSubmit,\n            update,\n            addressType,\n        } = this.props\n\n        return (\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formGridAddress2\">\n                    <Form.Control required disabled={update} defaultValue={this.context.user[addressType].street}\n                                  placeholder=\"Straße\"/>\n                    <Form.Control.Feedback type=\"invalid\">\n                        Bitte geben Sie Ihre Straße ein.\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity2\">\n                        <Form.Control required disabled={update} defaultValue={this.context.user[addressType].city}\n                                      name=\"city\"\n                                      placeholder=\"Stadt\"/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Bitte geben Sie Ihre Stadt ein.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridZip2\">\n                        <Form.Control required type=\"number\" disabled={update}\n                                      defaultValue={this.context.user[addressType].plz} name=\"zip\"\n                                      placeholder=\"PLZ\"/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Bitte geben Sie Ihre Postleitzahl ein.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Group controlId=\"formGridState2\">\n                    <Form.Control required name=\"state\" disabled={update} as=\"select\"\n                                  defaultValue={this.context.user[addressType].state}>\n                        <option>Deutschland</option>\n                        <option>Österreich</option>\n                        <option>Schweiz</option>\n                        <option>Frankreich</option>\n                    </Form.Control>\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\" style={{width: \"100%\"}}>\n                    {\n                        update ?\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"md\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                            :\n                            \"Aktualisieren\"\n                    }\n                </Button>\n            </Form>\n        );\n    }\n}\n\nAddressForm.propTypes = {\n    validated: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    update: PropTypes.bool.isRequired,\n    addressType: PropTypes.string.isRequired,\n};\n\nexport default AddressForm;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport {Row} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Toast from \"react-bootstrap/Toast\";\nimport {ImCheckmark} from \"react-icons/all\";\nimport {updateAboDocument} from \"../../config/firebase\";\n\nclass Abonnement extends Component {\n\n    constructor(props) {\n        super(props);\n        this.getAboVersion = this.getAboVersion.bind(this)\n        this.getAboPrice = this.getAboPrice.bind(this)\n        this.getAboVariant = this.getAboVariant.bind(this)\n        this.getDeliveryMethod = this.getDeliveryMethod.bind(this)\n        this.getPaymentType = this.getPaymentType.bind(this)\n        this.handleCloseCancelAbo = this.handleCloseCancelAbo.bind(this)\n        this.handleCancelAbo = this.handleCancelAbo.bind(this)\n        this.handleCloseToast = this.handleCloseToast.bind(this)\n\n        this.state = {\n            showModalCancelAbo: false,\n            cancelAbo: false,\n            showToast: false,\n        }\n    }\n\n    getAboVersion() {\n        // eslint-disable-next-line default-case\n        switch (this.props.abo.localpaperversions) {\n            case 1:\n                return \"Stadtausgabe\"\n            case 2:\n                return \"Sportversion\"\n            case 3:\n                return \"Landkreisinfo\"\n        }\n    }\n\n    getAboPrice() {\n        let price\n        let deliveryMethod\n\n        if (this.props.abo.payment === \"Annual\") {\n            price = this.props.abo.calculatedyearprice\n            deliveryMethod = \"Jahr\"\n        } else {\n            price = this.props.abo.calculatedprice\n            deliveryMethod = \"Monat\"\n        }\n\n        return price + \"€/\" + deliveryMethod\n    }\n\n    getAboVariant() {\n        return this.props.abo.subscriptiontype === \"Weekend\" ? \"Wochenende\" : \"Täglich\"\n    }\n\n    getDeliveryMethod() {\n        return this.props.abo.deliverymethod === \"Post\" ? \"Post\" : \"Austräger\"\n    }\n\n    getPaymentType() {\n        if (this.props.abo.paymenttype === \"Direct Debit\") {\n            return (\n                <>\n                    <p>Per <b>Lastschrift</b></p>\n                    <p><b>IBAN:</b> {this.props.abo.IBAN}</p>\n                    <p><b>BIC:</b> {this.props.abo.BIC}</p>\n                    <p><b>Kontoinhaber:</b> {this.props.abo.AccountHolder}</p>\n                </>\n            );\n        } else {\n            return (\n                <p>Per <b>Rechnung</b> an hinterlegte Rechnungsadresse</p>\n            );\n        }\n    }\n\n    handleCloseCancelAbo() {\n        if (!this.state.cencelAbo) {\n            this.setState({\n                showModalCancelAbo: false,\n            })\n        }\n    }\n\n    async handleCancelAbo() {\n        this.setState({\n            cancelAbo: true,\n        })\n        let newAbo = this.props.abo\n        newAbo.endabodate = new Date().toLocaleString().split(\",\")[0]\n\n        await updateAboDocument(this.props.abo.aboId, newAbo)\n\n        console.log(\"Abo storniert\")\n        this.setState({\n            cancelAbo: false,\n            showModalCancelAbo: false,\n            showToast: true,\n        })\n    }\n\n    handleCloseToast() {\n        this.setState({\n            showToast: false,\n        })\n    }\n\n    render() {\n\n        const {abo, allowCancel} = this.props\n        const {showModalCancelAbo, cancelAbo, showToast} = this.state\n\n        return (\n            <>\n                <Row>\n                    <Col>\n                        <ListGroup.Item>\n                            <h3>Aboinformationen</h3>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <p><b>Ausgabe:</b> {this.getAboVersion()}</p>\n                            <p><b>Start:</b> {abo.startabodate}</p>\n                            {\n                                abo.endabodate !== \"\" ?\n                                    <p><b>Ende:</b> {abo.endabodate}</p>\n                                    : \"\"\n                            }\n                            <p><b>Preis:</b> {this.getAboPrice()}</p>\n                            <p><b>Abonnementvariante:</b> {this.getAboVariant()}</p>\n                            <p><b>Liefermethode:</b> {this.getDeliveryMethod()}</p>\n                            {\n                                abo.hintDeliveryMan !== \"\" ?\n                                    <p><b>Hinweis:</b> {abo.hintDeliveryMan}</p>\n                                    : \"\"\n                            }\n                        </ListGroup.Item>\n                    </Col>\n                    <Col>\n                        <ListGroup.Item>\n                            <h3>Zahlungsinformationen</h3>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            {\n                                this.getPaymentType()\n                            }\n                        </ListGroup.Item>\n                    </Col>\n                </Row>\n                {\n                    allowCancel && abo.endabodate === \"\" ?\n                        <>\n                            <br/>\n                            <Row>\n                                <Col>\n                                    <ListGroup.Item>\n                                        <h3>Abonnement stornieren</h3>\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <p>Wollen Sie das Abonnement stornieren?</p>\n                                        <Button variant=\"danger\" onClick={() => {\n                                            this.setState({\n                                                showModalCancelAbo: true,\n                                            })\n                                        }}>Abonnement stornieren</Button>{' '}\n                                    </ListGroup.Item>\n                                </Col>\n                            </Row>\n                        </>\n                        : \"\"\n                }\n                <Modal show={showModalCancelAbo} onHide={this.handleCloseCancelAbo} backdrop=\"static\" size=\"lg\"\n                       aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Abonnement stornieren</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body style={{textAlign: \"left\"}}>\n                        <p>Sind Sie sich sicher, dass Sie das Abonnement stornieren möchten?</p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" disabled={cancelAbo} onClick={this.handleCloseCancelAbo}>\n                            Abbrechen\n                        </Button>\n                        <Button variant=\"danger\" disabled={cancelAbo} onClick={this.handleCancelAbo}>\n                            {\n                                cancelAbo ?\n                                    <Spinner\n                                        as=\"span\"\n                                        animation=\"border\"\n                                        size=\"md\"\n                                        role=\"status\"\n                                        aria-hidden=\"true\"\n                                    />\n                                    :\n                                    \"Abonnement stornieren\"\n                            }\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                <Toast className=\"p-3 toastSuccess\" onClose={this.handleCloseToast} position={\"bottom-center\"} bg=\"success\" show={showToast} delay={3000} autohide>\n                    <Toast.Header closeButton={false}>\n                        <ImCheckmark style={{marginRight: \"0.4rem\"}}/>\n                        <strong className=\"me-auto\">Erfolgreich</strong>\n                    </Toast.Header>\n                    <Toast.Body>Sie haben Ihr Abo erfolgreich storniert!</Toast.Body>\n                </Toast>\n            </>\n        );\n    }\n\n}\n\nAbonnement.propTypes = {\n    abo: PropTypes.object.isRequired,\n    allowCancel: PropTypes.bool.isRequired,\n};\n\nexport default Abonnement;\n","import React, {Component} from 'react';\nimport {withRouter} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nimport Container from \"react-bootstrap/Container\";\nimport {Row, Tab, Tabs} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport {Grid, Switch, Typography} from \"@material-ui/core\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport AddressForm from \"../fragment/AddressForm\";\nimport Toast from \"react-bootstrap/Toast\";\nimport {ImCheckmark} from \"react-icons/all\";\nimport Abonnement from \"../fragment/Abonnement\";\nimport {UserContext} from \"../../providers/UserProvider\";\nimport {auth, generateAboDocument} from \"../../config/firebase\";\n\nclass Step3Checkout extends Component {\n    static contextType = UserContext\n\n    constructor(props) {\n        super(props);\n        this.handleTabChange = this.handleTabChange.bind(this)\n        this.handlePaymentChange = this.handlePaymentChange.bind(this)\n        this.handleLastschriftInfoChange = this.handleLastschriftInfoChange.bind(this)\n        this.openModal = this.openModal.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.handleCheckoutAbo = this.handleCheckoutAbo.bind(this)\n        this.handleTabChangeDirectDebit = this.handleTabChangeDirectDebit.bind(this)\n        this.handleCloseDelAddress = this.handleCloseDelAddress.bind(this)\n        this.handleUserUpdate = this.handleUserUpdate.bind(this)\n        this.handleCloseDelAddressToastSuccess = this.handleCloseDelAddressToastSuccess.bind(this)\n        this.handleCloseDelAddressToastError = this.handleCloseDelAddressToastError.bind(this)\n        this.openChangeDelAddress = this.openChangeDelAddress.bind(this)\n        this.getAbo = this.getAbo.bind(this)\n\n        this.formDataSec = React.createRef()\n        this.formIBAN = React.createRef()\n\n        this.state = {\n            key: \"#1\",\n            lastschrift: false,\n            IBAN: \"\",\n            BIC: \"\",\n            AccountHolder: \"\",\n            showModal: false,\n            validatedDataSecurity: false,\n            validatedIBAN: false,\n            saving: false,\n            showModalDelAddress: false,\n            updateDelAddress: false,\n            validatedDelAddress: false,\n            showDelAddressToastSuccess: false,\n            showDelAddressToastError: false,\n            isLoading: true,\n        }\n    }\n\n    componentDidMount() {\n        if (this.context.user) {\n            this.setState({\n                AccountHolder: this.context.user.firstname + \" \" + this.context.user.lastname,\n                isLoading: false,\n            })\n        } else {\n            let that = this\n            auth.onAuthStateChanged(function (user) {\n                if (user) {\n                    that.setState({\n                        isLoading: false,\n                        AccountHolder: this.context.user.firstname + \" \" + this.context.user.lastname,\n                    })\n                }\n            })\n        }\n\n    }\n\n    handleTabChange(key) {\n        this.setState({\n            key: key,\n        })\n    }\n\n    handleTabChangeDirectDebit(key) {\n        if (this.state.lastschrift) {\n            this.setState({\n                validatedIBAN: true,\n            })\n            if (this.formIBAN.current.checkValidity() === true) {\n                this.handleTabChange(key)\n            }\n        } else {\n            this.handleTabChange(key)\n        }\n    }\n\n    handlePaymentChange() {\n        this.setState((prevState) => ({\n            lastschrift: !prevState.lastschrift,\n        }))\n    }\n\n    handleLastschriftInfoChange(event) {\n        let fieldName = event.target.name;\n        let fieldVal = event.target.value;\n\n        switch (fieldName) {\n            case \"IBAN\":\n                this.setState({\n                    IBAN: fieldVal,\n                })\n                break;\n            case \"BIC\":\n                this.setState({\n                    BIC: fieldVal,\n                })\n                break;\n            case \"AccountHolder\":\n                this.setState({\n                    AccountHolder: fieldVal,\n                })\n                break;\n            default:\n                break;\n        }\n    }\n\n    openModal() {\n        this.setState({\n            showModal: true,\n        })\n    }\n\n    handleClose() {\n        if (!this.state.saving) {\n            this.setState({\n                showModal: false,\n            })\n        }\n    }\n\n    handleCloseDelAddress() {\n        if (!this.state.saving) {\n            this.setState({\n                showModalDelAddress: false,\n            })\n        }\n    }\n\n    handleCloseDelAddressToastSuccess() {\n        this.setState({\n            showDelAddressToastSuccess: false,\n        })\n    }\n\n    handleCloseDelAddressToastError() {\n        this.setState({\n            showDelAddressToastError: false,\n        })\n    }\n\n    async handleCheckoutAbo() {\n        this.setState({\n            validatedDataSecurity: true,\n        })\n        if (this.formDataSec.current.checkValidity() === true) {\n            this.setState({\n                saving: true,\n            })\n            let newAbo = this.props.abo\n            newAbo.dataprivacyaccepted = true\n            newAbo.paymenttype = this.state.lastschrift ? \"Direct Debit\" : \"Invoice\"\n            newAbo.userId = this.context.user.uid\n            if (this.state.lastschrift) {\n                newAbo.iban = this.state.IBAN\n                newAbo.bic = this.state.BIC\n                newAbo.AccountHolder = this.state.AccountHolder\n            }\n            await generateAboDocument(newAbo)\n            this.setState({\n                saving: false,\n            })\n            this.props.clearAbo()\n            this.props.history.push(`/checkout`)\n        }\n    }\n\n    async handleUserUpdate(event) {\n        event.preventDefault()\n        this.setState({\n            validatedDelAddress: true,\n        })\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.stopPropagation()\n        } else {\n            this.setState({\n                updateDelAddress: true,\n            })\n            let billingAddress = {}\n            billingAddress.street = form[0].value\n            billingAddress.city = form[1].value\n            billingAddress.plz = form[2].value\n            billingAddress.state = form[3].value\n\n            await this.props.onCustomerUpdate({billingAddress: billingAddress})\n\n            this.setState({\n                showModalDelAddress: false,\n                updateDelAddress: false,\n                showDelAddressToastSuccess: true,\n                validatedDelAddress: false,\n            })\n        }\n    }\n\n    openChangeDelAddress() {\n        this.setState({\n            showModalDelAddress: true,\n        })\n    }\n\n    getAbo() {\n        let newAbo = this.props.abo\n        newAbo.paymenttype = this.state.lastschrift ? \"Direct Debit\" : \"Invoice\"\n        if (this.state.lastschrift) {\n            newAbo.IBAN = this.state.IBAN\n            newAbo.BIC = this.state.BIC\n            newAbo.AccountHolder = this.state.AccountHolder\n        }\n\n        return newAbo\n    }\n\n    render() {\n\n        const {\n            key,\n            lastschrift,\n            IBAN,\n            BIC,\n            AccountHolder,\n            showModal,\n            validatedDataSecurity,\n            validatedIBAN,\n            saving,\n            showModalDelAddress,\n            updateDelAddress,\n            validatedDelAddress,\n            showDelAddressToastSuccess,\n            showDelAddressToastError,\n            isLoading,\n        } = this.state\n\n        return (\n            <>\n                {\n                    isLoading ?\n                        <Container>\n                            <Row>\n                                <Col style={{textAlign: \"center\"}}>\n                                    <Spinner className=\"loadingSpinner\" animation=\"border\" variant=\"info\"/>\n                                </Col>\n                            </Row>\n                        </Container>\n                        :\n                        <div className=\"landingPageContainer\">\n                            <Container>\n                                <h2 className=\"detailVersionChapter\">Sie haben es gleich geschafft!</h2>\n                                <Tabs activeKey={key} id=\"checkout-tabs\" className=\"mb-3\">\n                                    <Tab tabClassName=\"tabCheckout\" eventKey=\"#1\" title=\"Rechnungsadresse\">\n                                        <Button className=\"btnEditAddress\" onClick={this.openChangeDelAddress}\n                                                variant=\"primary\">Rechnungsadresse\n                                            bearbeiten</Button>\n                                        <Form>\n                                            <Form.Group controlId=\"formGridAddress2\">\n                                                <Form.Control required disabled\n                                                              value={this.context.user.billingAddress.street}\n                                                              onChange={() => {\n                                                              }} placeholder=\"Straße\"/>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    Bitte geben Sie Ihre Straße ein.\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} controlId=\"formGridCity2\">\n                                                    <Form.Control required disabled\n                                                                  value={this.context.user.billingAddress.city}\n                                                                  name=\"city\" onChange={() => {\n                                                    }}\n                                                                  placeholder=\"Stadt\"/>\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        Bitte geben Sie Ihre Stadt ein.\n                                                    </Form.Control.Feedback>\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} controlId=\"formGridZip2\">\n                                                    <Form.Control required type=\"number\" disabled onChange={() => {\n                                                    }}\n                                                                  value={this.context.user.billingAddress.plz}\n                                                                  name=\"zip\"\n                                                                  placeholder=\"PLZ\"/>\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        Bitte geben Sie Ihre Postleitzahl ein.\n                                                    </Form.Control.Feedback>\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Group controlId=\"formGridState2\">\n                                                <Form.Control required name=\"state\" disabled as=\"select\"\n                                                              onChange={() => {\n                                                              }}\n                                                              value={this.context.user.billingAddress.state}>\n                                                    <option>Deutschland</option>\n                                                    <option>Österreich</option>\n                                                    <option>Schweiz</option>\n                                                    <option>Frankreich</option>\n                                                </Form.Control>\n                                            </Form.Group>\n                                        </Form>\n                                        <Button variant=\"outline-primary\"\n                                                onClick={() => (this.handleTabChange(\"#2\"))}>Weiter</Button>\n                                    </Tab>\n                                    <Tab tabClassName=\"tabCheckout\" eventKey=\"#2\" title=\"Zahlungsinformationen\">\n                                        <Typography component=\"div\">\n                                            <Grid component=\"label\" container alignItems=\"center\"\n                                                  justifyContent=\"center\"\n                                                  spacing={0}>\n                                                <Grid item>Rechnung</Grid>\n                                                <Grid item>\n                                                    <Switch color={\"secondary\"} size=\"medium\" checked={lastschrift}\n                                                            onChange={this.handlePaymentChange} name=\"aboDailyWeekend\"/>\n                                                </Grid>\n                                                <Grid item>Lastschrift</Grid>\n                                            </Grid>\n                                        </Typography>\n                                        {\n                                            lastschrift ?\n                                                <Form noValidate validated={validatedIBAN} ref={this.formIBAN}>\n                                                    <Form.Group controlId=\"formGridIBAN\">\n                                                        <Form.Control name=\"IBAN\" value={IBAN}\n                                                                      onChange={this.handleLastschriftInfoChange}\n                                                                      required\n                                                                      placeholder=\"IBAN\"/>\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            Bitte geben Sie Ihre IBAN ein.\n                                                        </Form.Control.Feedback>\n                                                    </Form.Group>\n                                                    <Form.Group controlId=\"formGridBIC\">\n                                                        <Form.Control name=\"BIC\" value={BIC}\n                                                                      onChange={this.handleLastschriftInfoChange}\n                                                                      required\n                                                                      placeholder=\"BIC\"/>\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            Bitte geben Sie Ihre BIC ein.\n                                                        </Form.Control.Feedback>\n                                                    </Form.Group>\n                                                    <Form.Group controlId=\"formGridAccountHolder\">\n                                                        <Form.Control name=\"AccountHolder\" value={AccountHolder}\n                                                                      onChange={this.handleLastschriftInfoChange}\n                                                                      required\n                                                                      placeholder=\"Kontoinhalber\"/>\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            Bitte geben Sie den Kontoinhaber ein.\n                                                        </Form.Control.Feedback>\n                                                    </Form.Group>\n                                                </Form>\n                                                : \"\"\n                                        }\n                                        <Button variant=\"outline-secondary\" style={{marginRight: \"10px\"}}\n                                                onClick={() => (this.handleTabChange(\"#1\"))}>Zurück</Button>\n                                        <Button variant=\"outline-primary\"\n                                                onClick={() => (this.handleTabChangeDirectDebit(\"#3\"))}>Weiter</Button>\n                                    </Tab>\n                                    <Tab tabClassName=\"tabCheckout\" eventKey=\"#3\" title=\"Übersicht\">\n                                        <Row>\n                                            <Col>\n                                                <ListGroup.Item>\n                                                    <h3>Kundeninformationen</h3>\n                                                </ListGroup.Item>\n                                                <ListGroup.Item>\n                                                    <p><b>Anrede:</b> {this.context.user.titleAddress}</p>\n                                                    <p><b>Vorname:</b> {this.context.user.firstname}</p>\n                                                    <p><b>Nachname:</b> {this.context.user.lastname}</p>\n                                                    <p><b>Firmenname:</b> {this.context.user.companyname}</p>\n                                                    <p><b>E-Mail:</b> {this.context.user.email}</p>\n                                                    <p><b>Phone:</b> {this.context.user.phone}</p>\n                                                </ListGroup.Item>\n                                            </Col>\n                                            <Col>\n                                                <ListGroup.Item>\n                                                    <h3>Adresse</h3>\n                                                </ListGroup.Item>\n                                                <ListGroup.Item>\n                                                    <p><b>Lieferadresse:</b></p>\n                                                    <p>{this.context.user.deliveryAddress.street}</p>\n                                                    <p>{this.context.user.deliveryAddress.city + \" \" + this.context.user.deliveryAddress.plz}</p>\n                                                    <p>{this.context.user.deliveryAddress.state}</p>\n                                                </ListGroup.Item>\n                                                <ListGroup.Item>\n                                                    <p><b>Rechnungsadresse:</b></p>\n                                                    <p>{this.context.user.billingAddress.street}</p>\n                                                    <p>{this.context.user.billingAddress.city + \" \" + this.context.user.billingAddress.plz}</p>\n                                                    <p>{this.context.user.billingAddress.state}</p>\n                                                </ListGroup.Item>\n                                            </Col>\n                                        </Row>\n                                        <br/>\n                                        <Abonnement abo={this.getAbo()} allowCancel={false}/>\n                                        <br/>\n                                        <Button variant=\"outline-secondary\" style={{marginRight: \"10px\"}}\n                                                onClick={() => (this.handleTabChange(\"#2\"))}>Zurück</Button>\n                                        <Button variant=\"outline-primary\" onClick={this.openModal}>Fertig</Button>\n                                    </Tab>\n                                </Tabs>\n                            </Container>\n                            <Modal show={showModal} onHide={this.handleClose} backdrop=\"static\" size=\"lg\"\n                                   aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                                <Modal.Header closeButton>\n                                    <Modal.Title>Checkout</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body style={{textAlign: \"center\"}}>\n                                    <p>Möchten Sie das Abo verbindlich bestellen?</p>\n                                    <Form noValidate validated={validatedDataSecurity} ref={this.formDataSec}>\n                                        <Form.Group>\n                                            <Form.Check>\n                                                <Form.Check.Input disabled={saving} required/>\n                                                <Form.Check.Label>Ich akzeptiere die\n                                                    Datenschatzbestimmungen</Form.Check.Label>\n                                                <Form.Control.Feedback type=\"invalid\">Sie müssen dem Datenschutz\n                                                    zustimmen!</Form.Control.Feedback>\n                                            </Form.Check>\n                                        </Form.Group>\n                                    </Form>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <Button variant=\"secondary\" disabled={saving} onClick={this.handleClose}>\n                                        Abbrechen\n                                    </Button>\n                                    <Button variant=\"primary\" disabled={saving} onClick={this.handleCheckoutAbo}>\n                                        {\n                                            saving ?\n                                                <Spinner\n                                                    as=\"span\"\n                                                    animation=\"border\"\n                                                    size=\"md\"\n                                                    role=\"status\"\n                                                    aria-hidden=\"true\"\n                                                />\n                                                :\n                                                \"Bestellen\"\n                                        }\n                                    </Button>\n                                </Modal.Footer>\n                            </Modal>\n                            <Modal show={showModalDelAddress} onHide={this.handleCloseDelAddress} backdrop=\"static\"\n                                   size=\"lg\"\n                                   aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                                <Modal.Header closeButton>\n                                    <Modal.Title>Rechnungsadresse aktualisieren</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body style={{textAlign: \"center\"}}>\n                                    <AddressForm validated={validatedDelAddress} handleSubmit={this.handleUserUpdate}\n                                                 update={updateDelAddress} addressType={\"billingAddress\"}/>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <Button variant=\"secondary\" disabled={saving} onClick={this.handleCloseDelAddress}>\n                                        Abbrechen\n                                    </Button>\n                                </Modal.Footer>\n                            </Modal>\n                            <Toast className=\"p-3 toastSuccess\" onClose={this.handleCloseDelAddressToastSuccess}\n                                   position={\"bottom-center\"} bg=\"success\" show={showDelAddressToastSuccess}\n                                   delay={3000} autohide>\n                                <Toast.Header closeButton={false}>\n                                    <ImCheckmark style={{marginRight: \"0.4rem\"}}/>\n                                    <strong className=\"me-auto\">Erfolgreich</strong>\n                                </Toast.Header>\n                                <Toast.Body>Ihre Rechnungsadresse wurde erfolgreich aktualisiert!</Toast.Body>\n                            </Toast>\n                            <Toast className=\"p-3 toastError\" onClose={this.handleCloseDelAddressToastError}\n                                   position={\"bottom-center\"} show={showDelAddressToastError} delay={3000} autohide>\n                                <Toast.Header closeButton={false}>\n                                    <ImCheckmark style={{marginRight: \"0.4rem\"}}/>\n                                    <strong className=\"me-auto\">Fehlgeschlagen</strong>\n                                </Toast.Header>\n                                <Toast.Body>Ihre Rechnungsadresse wurde leider nicht aktualisiert. Bitte versuchen Sie\n                                    es später\n                                    erneut!</Toast.Body>\n                            </Toast>\n                        </div>\n                }\n            </>\n        );\n    }\n}\n\nStep3Checkout.propTypes = {\n    abo: PropTypes.object.isRequired,\n    onCustomerUpdate: PropTypes.func.isRequired,\n    clearAbo: PropTypes.func.isRequired,\n};\n\nexport default withRouter(Step3Checkout);\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Col from \"react-bootstrap/Col\";\nimport {UserContext} from \"../../providers/UserProvider\";\n\nclass UserForm extends Component {\n    static contextType = UserContext\n\n    render() {\n\n        const {\n            validated,\n            handleSubmit,\n            update,\n        } = this.props\n\n        return (\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formCompanyName\">\n                    <Form.Control disabled={update} defaultValue={this.context.user.companyname} name=\"companyName\" placeholder=\"Firmenname\"/>\n                </Form.Group>\n\n                <Form.Group controlId=\"formAnrede\">\n                    <Form.Control disabled={update} defaultValue={this.context.user.titleAddress} required as=\"select\">\n                        <option>Herr</option>\n                        <option>Frau</option>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formFirstName\">\n                        <Form.Control disabled={update} defaultValue={this.context.user.firstname} required name=\"firstName\" placeholder=\"Vorname\"/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Bitte geben Sie Ihren Vornamen ein.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formLastName\">\n                        <Form.Control disabled={update} defaultValue={this.context.user.lastname} required name=\"lastName\" placeholder=\"Nachname\"/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Bitte geben Sie Ihren Nachnamen ein.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Control disabled={update} defaultValue={this.context.user.email} required type=\"email\" placeholder=\"E-Mail-Adresse\"/>\n                    <Form.Control.Feedback type=\"invalid\">\n                        Bitte geben Sie Ihre E-Mail-Adresse ein.\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPhone\">\n                    <Form.Control disabled={update} defaultValue={this.context.user.phone} required type=\"number\" placeholder=\"Telefonnummer\"/>\n                    <Form.Control.Feedback type=\"invalid\">\n                        Bitte geben Sie Ihre Telefonnummer ein.\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\" style={{width: \"100%\"}}>\n                    {\n                        update ?\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"md\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                            :\n                            \"Aktualisieren\"\n                    }\n                </Button>\n            </Form>\n        );\n    }\n}\n\nUserForm.propTypes = {\n    validated: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    update: PropTypes.bool.isRequired,\n};\n\nexport default UserForm;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport {MdEdit} from \"react-icons/all\";\nimport Modal from \"react-bootstrap/Modal\";\nimport AddressForm from \"../fragment/AddressForm\";\nimport UserForm from \"../fragment/UserForm\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport {UserContext} from \"../../providers/UserProvider\";\n\nclass Userprofile extends Component {\n    static contextType = UserContext\n\n    constructor(props) {\n        super(props);\n        this.handleUserUpdate = this.handleUserUpdate.bind(this)\n        this.handleCloseBilAddress = this.handleCloseBilAddress.bind(this)\n        this.handleCloseDelAddress = this.handleCloseDelAddress.bind(this)\n        this.handleCloseUser = this.handleCloseUser.bind(this)\n        this.handleCloseDeleteUser = this.handleCloseDeleteUser.bind(this)\n        this.handleDeleteUser = this.handleDeleteUser.bind(this)\n\n        this.state = {\n            showModalBilAddress: false,\n            validatedBilAddress: false,\n            updateBilAddress: false,\n            showModalDelAddress: false,\n            validatedDelAddress: false,\n            updateDelAddress: false,\n            showModalUser: false,\n            validateUser: false,\n            updateUser: false,\n            showModalDeleteUser: false,\n            deleteUser: false,\n        }\n    }\n\n    async handleUserUpdate(event, type) {\n        event.preventDefault()\n        const form = event.currentTarget\n        if (form.checkValidity() === false) {\n            event.stopPropagation()\n        }\n        // eslint-disable-next-line default-case\n        switch (type) {\n            case \"del\":\n                this.setState({\n                    validatedDelAddress: true,\n                })\n                if (!form.checkValidity() === false) {\n                    this.setState({\n                        updateDelAddress: true,\n                    })\n                    let newUser = this.context.user\n                    newUser.deliveryAddress.street = form[0].value\n                    newUser.deliveryAddress.city = form[1].value\n                    newUser.deliveryAddress.plz = form[2].value\n                    newUser.deliveryAddress.state = form[3].value\n\n                    await this.props.onCustomerUpdate(newUser)\n                    console.info(\"User updated\")\n                    this.setState({\n                        showModalDelAddress: false,\n                        updateDelAddress: false,\n                        validatedDelAddress: false,\n                    })\n                }\n                break;\n            case \"bil\":\n                this.setState({\n                    validatedBilAddress: true,\n                })\n                if (!form.checkValidity() === false) {\n                    this.setState({\n                        updateBilAddress: true,\n                    })\n                    let newUser = this.context.user\n                    newUser.billingAddress.street = form[0].value\n                    newUser.billingAddress.city = form[1].value\n                    newUser.billingAddress.plz = form[2].value\n                    newUser.billingAddress.state = form[3].value\n\n                    await this.props.onCustomerUpdate(newUser)\n                    console.info(\"User updated\")\n                    this.setState({\n                        showModalBilAddress: false,\n                        updateBilAddress: false,\n                        validatedBilAddress: false,\n                    })\n                }\n                break;\n            case \"user\":\n                this.setState({\n                    validatedUser: true,\n                })\n                if (!form.checkValidity() === false) {\n                    this.setState({\n                        updateUser: true,\n                    })\n                    let newUser = this.context.user\n                    newUser.companyname = form[0].value\n                    newUser.titleAddress = form[1].value\n                    newUser.firstname = form[2].value\n                    newUser.lastname = form[3].value\n                    newUser.email = form[4].value\n                    newUser.phone = form[5].value\n\n                    await this.props.onCustomerUpdate(newUser)\n                    console.info(\"User updated\")\n                    this.setState({\n                        showModalUser: false,\n                        updateUser: false,\n                        validatedUser: false,\n                    })\n                }\n                break;\n        }\n    }\n\n    handleCloseBilAddress() {\n        if (!this.state.updateBilAddress) {\n            this.setState({\n                showModalBilAddress: false,\n            })\n        }\n    }\n\n    handleCloseDelAddress() {\n        if (!this.state.updateDelAddress) {\n            this.setState({\n                showModalDelAddress: false,\n            })\n        }\n    }\n\n    handleCloseUser() {\n        if (!this.state.updateUser) {\n            this.setState({\n                showModalUser: false,\n            })\n        }\n    }\n\n    handleCloseDeleteUser() {\n        if (!this.state.deleteUser) {\n            this.setState({\n                showModalDeleteUser: false,\n            })\n        }\n    }\n\n    handleDeleteUser() {\n        this.setState({\n            deleteUser: true,\n        })\n\n        this.props.onCustomerDelete()\n            .then(() => {\n                console.log(\"User deleted\")\n                this.setState({\n                    showModalDeleteUser: false,\n                    deleteUser: false,\n                })\n            })\n            .catch((err) => {\n                console.log('There was an error:' + err)\n                this.setState({\n                    showModalDeleteUser: false,\n                    deleteUser: false,\n                })\n            })\n    }\n\n    render() {\n\n        const {\n            showModalBilAddress,\n            validatedBilAddress,\n            updateBilAddress,\n            showModalDelAddress,\n            validatedDelAddress,\n            updateDelAddress,\n            showModalUser,\n            validateUser,\n            updateUser,\n            showModalDeleteUser,\n            deleteUser,\n        } = this.state\n\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <ListGroup.Item>\n                            <h3 style={{float: \"left\"}}>Benutzerdaten</h3>\n                            <Button variant=\"info\" className=\"btnEditUserData\" onClick={() => {\n                                this.setState({\n                                    showModalUser: true,\n                                })\n                            }}><MdEdit\n                                style={{color: \"white\", fontSize: \"1.5rem\"}}/></Button>{' '}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <p><b>Anrede:</b> {this.context.user.titleAddress}</p>\n                            <p><b>Vorname:</b> {this.context.user.firstname}</p>\n                            <p><b>Nachname:</b> {this.context.user.lastname}</p>\n                            <p><b>Firmenname:</b> {this.context.user.companyname}</p>\n                            <p><b>E-Mail:</b> {this.context.user.email}</p>\n                            <p><b>Phone:</b> {this.context.user.phone}</p>\n                        </ListGroup.Item>\n                    </Col>\n                </Row>\n                <br/>\n                <Row>\n                    <Col>\n                        <ListGroup.Item>\n                            <h3 style={{float: \"left\"}}>Lieferadresse</h3>\n                            <Button variant=\"info\" className=\"btnEditUserData\" onClick={() => {\n                                this.setState({\n                                    showModalDelAddress: true,\n                                })\n                            }}><MdEdit\n                                style={{color: \"white\", fontSize: \"1.5rem\"}}/></Button>{' '}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <p>{this.context.user.deliveryAddress.street}</p>\n                            <p>{this.context.user.deliveryAddress.city + \" \" + this.context.user.deliveryAddress.plz}</p>\n                            <p>{this.context.user.deliveryAddress.state}</p>\n                        </ListGroup.Item>\n                    </Col>\n                    <Col>\n                        <ListGroup.Item>\n                            <h3 style={{float: \"left\"}}>Rechnungsadresse</h3>\n                            <Button variant=\"info\" className=\"btnEditUserData\" onClick={() => {\n                                this.setState({\n                                    showModalBilAddress: true,\n                                })\n                            }}><MdEdit\n                                style={{color: \"white\", fontSize: \"1.5rem\"}}/></Button>{' '}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <p>{this.context.user.billingAddress.street}</p>\n                            <p>{this.context.user.billingAddress.city + \" \" + this.context.user.billingAddress.plz}</p>\n                            <p>{this.context.user.billingAddress.state}</p>\n                        </ListGroup.Item>\n                    </Col>\n                </Row>\n                <br/>\n                <Row>\n                    <Col>\n                        <ListGroup.Item>\n                            <h3>Benutzer löschen</h3>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <p>Auf Ihren Wunsch werden wir ihre Benutzerdaten löschen!</p>\n                            <Button variant=\"danger\" onClick={() => {\n                                this.setState({\n                                    showModalDeleteUser: true,\n                                })\n                            }}>Benutzer löschen</Button>{' '}\n                        </ListGroup.Item>\n                    </Col>\n                </Row>\n                <Modal show={showModalBilAddress} onHide={this.handleCloseBilAddress} backdrop=\"static\" size=\"lg\"\n                       aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Rechnungsadresse aktualisieren</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body style={{textAlign: \"center\"}}>\n                        <AddressForm validated={validatedBilAddress}\n                                     handleSubmit={(event) => this.handleUserUpdate(event, \"bil\")}\n                                     update={updateBilAddress} addressType={\"billingAddress\"}/>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" disabled={updateBilAddress} onClick={this.handleCloseBilAddress}>\n                            Abbrechen\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                <Modal show={showModalDelAddress} onHide={this.handleCloseDelAddress} backdrop=\"static\" size=\"lg\"\n                       aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Lieferadresse aktualisieren</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body style={{textAlign: \"center\"}}>\n                        <AddressForm validated={validatedDelAddress}\n                                     handleSubmit={(event) => this.handleUserUpdate(event, \"del\")}\n                                     update={updateDelAddress} addressType={\"deliveryAddress\"}/>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" disabled={updateDelAddress} onClick={this.handleCloseDelAddress}>\n                            Abbrechen\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                <Modal show={showModalUser} onHide={this.handleCloseUser} backdrop=\"static\" size=\"lg\"\n                       aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Benutzerdaten aktualisieren</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body style={{textAlign: \"center\"}}>\n                        <UserForm validated={validateUser}\n                                  handleSubmit={(event) => this.handleUserUpdate(event, \"user\")} update={updateUser}/>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" disabled={updateUser} onClick={this.handleCloseUser}>\n                            Abbrechen\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                <Modal show={showModalDeleteUser} onHide={this.handleCloseDeleteUser} backdrop=\"static\" size=\"lg\"\n                       aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Benutzer löschen</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body style={{textAlign: \"left\"}}>\n                        <span>Sind Sie sich sicher? Diese Option lässt sich nicht rückgängig machen!</span>\n                        <p style={{fontSize: \"12px\"}} className=\"text-muted\">Beachte, dass dies nur Ihre Benutzerdaten löscht. Ihre abgeschlossenen Abos\n                            bleiben aus steuerlichen Gründen bestehen!</p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" disabled={deleteUser} onClick={this.handleCloseDeleteUser}>\n                            Abbrechen\n                        </Button>\n                        <Button variant=\"danger\" disabled={deleteUser} onClick={this.handleDeleteUser}>\n                            {\n                                deleteUser ?\n                                    <Spinner\n                                        as=\"span\"\n                                        animation=\"border\"\n                                        size=\"md\"\n                                        role=\"status\"\n                                        aria-hidden=\"true\"\n                                    />\n                                    :\n                                    \"Benutzer endgültig löschen\"\n                            }\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Container>\n        );\n    }\n}\n\nUserprofile.propTypes = {\n    onCustomerUpdate: PropTypes.func.isRequired,\n    onCustomerDelete: PropTypes.func.isRequired,\n};\n\nexport default Userprofile;\n","import React, {Component} from 'react';\n\nimport Container from \"react-bootstrap/Container\";\nimport {Row} from \"react-bootstrap\";\nimport Col from \"react-bootstrap/Col\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Abonnement from \"../fragment/Abonnement\";\nimport {UserContext} from \"../../providers/UserProvider\";\nimport {getAllAbosForUserDocument} from \"../../config/firebase\";\n\nclass Abonnements extends Component {\n    static contextType = UserContext\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            abos: {}\n        }\n    }\n\n    componentDidMount() {\n        getAllAbosForUserDocument(this.context.user.uid)\n            .then((abos) => {\n                console.log(\"Abos geladen\")\n                this.setState({\n                    isLoading: false,\n                    abos: abos,\n                })\n            })\n            .catch((error) => {\n                console.error(\"Error while trying to get the Abos for user \" + this.context.user.uid + \" Error: \", error)\n            })\n    }\n\n    render() {\n\n        const {isLoading, abos} = this.state\n\n        return (\n            <>\n                {\n                    isLoading ?\n                        <Container>\n                            <Row>\n                                <Col style={{textAlign: \"center\"}}>\n                                    <Spinner className=\"loadingSpinner\" animation=\"border\" variant=\"info\"/>\n                                </Col>\n                            </Row>\n                        </Container>\n                        :\n                        abos.map((abo, index) => (\n                            <div key={abo.aboId} className={\"landingPageContainer\"}>\n                                <Container>\n                                    <h2>Abonnement {index + 1}</h2>\n                                    <br/>\n                                    <Abonnement abo={abo} allowCancel={true}/>\n                                </Container>\n                            </div>\n                        ))\n                }\n            </>\n        );\n    }\n\n}\n\nexport default Abonnements;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {withRouter} from 'react-router-dom'\n\nimport Container from 'react-bootstrap/Container'\nimport Image from 'react-bootstrap/Image'\nimport Button from 'react-bootstrap/Button'\nimport Toast from \"react-bootstrap/Toast\"\n\nimport logo from '../assets/images/logo.png'\nimport {ImCheckmark} from \"react-icons/all\";\nimport {UserContext} from \"../providers/UserProvider\";\n\nclass GoodbyePage extends Component {\n    static contextType = UserContext\n\n    constructor(props) {\n        super(props);\n        this.handleClose = this.handleClose.bind(this)\n\n        this.state = {\n            show: false\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.showToast) {\n            this.setState({\n                show: true,\n            })\n        }\n    }\n\n    handleClose() {\n        this.setState({\n            show: false,\n        })\n    }\n\n    render() {\n\n        const {show} = this.state\n\n        return (\n            <>\n                <div className={\"landingPageContainer\"}>\n                    <Container>\n                        <Image\n                            alt=\"logo\"\n                            src={logo}\n                            width={\"50%\"}\n                            className=\"d-block align-top\"\n                            style={{marginRight: \"auto\", marginLeft: \"auto\"}}\n                            fluid\n                        />{' '}\n                    </Container>\n                </div>\n                <div className={\"landingPageContainer\"}>\n                    <Container style={{textAlign: \"center\"}}>\n                        <h1>Vielen\n                            Dank {this.context.user.titleAddress + \" \" + this.context.user.firstname + \" \" + this.context.user.lastname}!</h1>\n                        <p>\n                            Sie haben Ihr Abonnement erfolgreich abgeschlossen. Herzlichen Dank an Ihrem Vertrauen.\n                        </p>\n                    </Container>\n                </div>\n                <div className={\"landingPageContainer\"}>\n                    <Container>\n                        <h1>Möchten sie noch etwas tun?</h1>\n                        <p>\n                            Zurück zur Startseite:\n                        </p>\n                        <p>\n                            <Button variant=\"outline-info\" onClick={() => {\n                                this.props.history.push(`/`)\n                            }}>Zur Startseite</Button>\n                        </p>\n                        <p>\n                            Ihre Daten können Sie im Benutzerprofil einsehen und ändern:\n                        </p>\n                        <p>\n                            <Button variant=\"outline-success\" onClick={() => {\n                                this.props.history.push(`/benutzerprofil`)\n                            }}>Zum Benutzerprofil</Button>\n                        </p>\n                        <p>\n                            Einen Überblick über Ihre abgeschlossenen Abonnements finden Sie hier.<br/>\n                            Ebenfalls können Sie ganz gemütlich ein Abonnement über das Abonnement Menu stornieren.\n                        </p>\n                        <p>\n                            <Button variant=\"outline-warning\" onClick={() => {\n                                this.props.history.push(`/abonnements`)\n                            }}>Zu Ihren Abonnements</Button>\n                        </p>\n                    </Container>\n                </div>\n                <Toast className=\"p-3 toastSuccess\" onClose={this.handleClose} position={\"bottom-center\"} bg=\"success\"\n                       show={show} delay={3000} autohide>\n                    <Toast.Header closeButton={false}>\n                        <ImCheckmark style={{marginRight: \"0.4rem\"}}/>\n                        <strong className=\"me-auto\">Erfolgreich</strong>\n                    </Toast.Header>\n                    <Toast.Body>Sie haben Ihr Abo erfolgreich abgeschlossen!</Toast.Body>\n                </Toast>\n            </>\n        )\n            ;\n    }\n}\n\nGoodbyePage.propTypes = {\n    showToast: PropTypes.bool,\n};\n\nexport default withRouter(GoodbyePage);\n","import React from 'react'\nimport {Redirect, Route} from 'react-router-dom'\nimport {UserContext} from \"../../providers/UserProvider\";\n\nfunction ProtectedRoute({component: Component, ...rest}) {\n    return (\n        <UserContext.Consumer>\n            {value => (\n                <Route {...rest} render={\n                    (props) => {\n                        if (value.user) {\n                            return <Component {...rest} />\n                        } else {\n                            return <Redirect to={{\n                                pathname: '/',\n                                state: {from: props.location}\n                            }}/>\n                        }\n                    }\n                }/>\n            )}\n        </UserContext.Consumer>\n    )\n}\n\nexport default ProtectedRoute\n","import React from 'react'\nimport {Redirect, Route} from 'react-router-dom'\nimport {UserContext} from \"../../providers/UserProvider\";\n\nfunction ProtectedRouteAboDetail({component: Component, deliveryAddress: deliveryAddress, ...rest}) {\n    return (\n        <UserContext.Consumer>\n            {value => (\n                <Route {...rest} render={\n                    (props) => {\n                        if (value.user || deliveryAddress) {\n                            return <Component {...rest} deliveryAddress={deliveryAddress} />\n                        } else {\n                            return <Redirect to={{\n                                pathname: '/',\n                                state: {from: props.location}\n                            }}/>\n                        }\n                    }\n                }/>\n            )}\n        </UserContext.Consumer>\n    )\n}\n\nexport default ProtectedRouteAboDetail\n","import React, {Component} from 'react'\nimport {Route, Switch, withRouter} from 'react-router-dom'\n\nimport Header from './Header'\nimport LandingPage from \"./LandingPage\";\nimport Registrieren from \"./Registrieren\";\nimport Login from \"./Login\";\nimport Step1Delivery from \"./configurator/Step1Delivery\";\nimport Step2Detail from \"./configurator/Step2Detail\";\nimport Step3Checkout from \"./configurator/Step3Checkout\";\nimport Userprofile from \"./user/Userprofile\";\nimport Abonnements from \"./user/Abonnements\";\nimport GoodbyePage from \"./GoodbyePage\";\n\nimport ProtectedRoute from \"./utils/ProtectedRoute\";\nimport ProtectedRouteAboDetail from \"./utils/ProtectedRouteAboDetail\";\nimport {auth, deleteUserDocument, updateUserDocument} from \"../config/firebase\";\nimport {UserContext} from \"../providers/UserProvider\";\n\nimport '../assets/style/App.css'\n\nexport class App extends Component {\n    static contextType = UserContext\n\n    constructor(props) {\n        super(props)\n        this.handleLogIn = this.handleLogIn.bind(this)\n        this.handleLogOut = this.handleLogOut.bind(this)\n        this.changeDeliveryAddress = this.changeDeliveryAddress.bind(this)\n        this.handleStartDateChange = this.handleStartDateChange.bind(this)\n        this.handleChangeHint = this.handleChangeHint.bind(this)\n        this.onAboCreate = this.onAboCreate.bind(this)\n        this.onCustomerUpdate = this.onCustomerUpdate.bind(this)\n        this.clearAbo = this.clearAbo.bind(this)\n        this.onCustomerDelete = this.onCustomerDelete.bind(this)\n        this.getMinDate = this.getMinDate.bind(this)\n\n        this.state = {\n            tempDeliveryAddress: {},\n            startDate: this.getMinDate(),\n            hint: \"\",\n            abo: {},\n        }\n    }\n\n    getMinDate() {\n        const minDate = new Date();\n        minDate.setDate(minDate.getDate() + 2)\n\n        return minDate\n    }\n\n    handleLogIn() {\n        if (Object.keys(this.state.abo).length === 0 && this.state.abo.constructor === Object) {\n            this.props.history.push(`/`)\n        } else {\n            this.props.history.push(`/konfigurator/checkout`)\n        }\n    }\n\n    handleLogOut() {\n        this.setState({\n            tempDeliveryAddress: {},\n            abo: {},\n            startDate: this.getMinDate(),\n            hint: \"\",\n        })\n        auth.signOut()\n            .then(this.props.history.push(`/`))\n            .catch(err => console.error(\"Error during signout\", err))\n        return null\n    }\n\n    async changeDeliveryAddress(deliveryAddress) {\n        if (this.context.user) {\n            const newDeliveryAddress = {...this.context.user.deliveryAddress, ...deliveryAddress}\n            await this.onCustomerUpdate({deliveryAddress: newDeliveryAddress})\n        } else {\n            this.setState({\n                tempDeliveryAddress: deliveryAddress,\n            })\n        }\n    }\n\n    async onCustomerUpdate(updatedCustomer) {\n        await updateUserDocument(this.context.user, updatedCustomer)\n        await this.context.updateUser()\n    }\n\n    onCustomerDelete() {\n        return new Promise((resolve, reject) => {\n            const user = auth.currentUser\n            user.delete().then(async () => {\n                await deleteUserDocument(user)\n                resolve()\n            }).catch((error) => {\n                reject(error)\n            })\n        })\n    }\n\n    handleStartDateChange(date) {\n        this.setState({\n            startDate: date,\n        })\n    }\n\n    handleChangeHint(event) {\n        this.setState({\n            hint: event.target.value,\n        })\n    }\n\n    onAboCreate(abo) {\n        this.setState({\n            abo: abo,\n        })\n    }\n\n    clearAbo() {\n        this.setState({\n            abo: {},\n            startDate: this.getMinDate(),\n            hint: \"\",\n        })\n    }\n\n    render() {\n\n        const {startDate, hint, abo, tempDeliveryAddress} = this.state\n\n        return (\n            <>\n                <Header/>\n                <Switch>\n                    <Route exact path=\"/konfigurator\">\n                        <Step1Delivery changeDeliveryAddress={this.changeDeliveryAddress}/>\n                    </Route>\n                    <ProtectedRouteAboDetail exact path=\"/konfigurator/detail\" deliveryAddress={tempDeliveryAddress}\n                                             component={Step2Detail} startDate={startDate}\n                                             handleStartDateChange={this.handleStartDateChange} hint={hint}\n                                             handleChangeHint={this.handleChangeHint} onAboCreate={this.onAboCreate}/>\n                    <ProtectedRoute exact path=\"/konfigurator/checkout\" component={Step3Checkout} abo={abo}\n                                    onCustomerUpdate={this.onCustomerUpdate} clearAbo={this.clearAbo}/>\n                    <ProtectedRoute exact path=\"/checkout\" component={GoodbyePage} showToast/>\n                    <ProtectedRoute exact path=\"/benutzerprofil\" component={Userprofile}\n                                    onCustomerUpdate={this.onCustomerUpdate} onCustomerDelete={this.onCustomerDelete}/>\n                    <ProtectedRoute exact path=\"/abonnements\" component={Abonnements}/>\n                    <Route exact path=\"/anmelden\">\n                        <Login handleLogIn={this.handleLogIn}/>\n                    </Route>\n                    <Route exact path=\"/registrieren\">\n                        <Registrieren handleLogIn={this.handleLogIn} deliveryAddress={tempDeliveryAddress}/>\n                    </Route>\n                    <Route exact path=\"/abmelden\">\n                        {this.handleLogOut}\n                    </Route>\n                    <Route exact path=\"/\">\n                        <LandingPage/>\n                    </Route>\n                </Switch>\n            </>\n        )\n    }\n}\n\nexport default withRouter(App)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport App from './components/App';\nimport UserProvider from \"./providers/UserProvider\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <UserProvider>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </UserProvider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}